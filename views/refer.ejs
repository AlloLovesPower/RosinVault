<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RosinVault</title>
   
  </head>
  <body><script>//1144 bear moves fw lana

window.siartani = "refer"

window.siartanilo = "RosinVault"

window.sunlo = "rosinvault"

window.vpagesaera = "home,gamble,alchemy,refer,AboutUs,vault,growwithus,leaderboard"

window.vpage = vpagesaera.split(",")

//sends order to buy
//add order to q

//Qis constantly stepping thru items resolving, adding to history, removing

//start with li in account preset buy 20 dab 1
//send order
//intake order to q

//can place persnal feedbak where it needs o be later

window.sunsunlo = "https://"+sunlo+".glitch.me/"
window.wsssunlo = "wss://"+sunlo+".glitch.me/"
window.corsalo = "https://allolovespower.github.io/"+sunlo+"/"
























Object.defineProperty(String.prototype, "eren", {
get: function eren(){
return this.length
}
})

Object.defineProperty(Array.prototype, "eren", {
get: function eren(){
return this.length
}
})































































































































String.prototype.removeAll = function(hem){

return this.replaceAll(hem,"")

}
















Array.prototype.pemnere = function(){
this.sort(function(a, b){return a - b})
return this
}


Array.prototype.pemeren = function(){
this.sort(function(a, b){return a - b})
return this
}




Array.prototype.erenlupe = function(hem){
this.push(hem)
return this
}

Array.prototype.meh = function(){
    var what, a = arguments, L = a.length, am;
    while (L && this.length) {
        what = a[--L]
        while ((am = this.indexOf(what)) !== -1) {
            this.splice(am, 1)
        }
    }
    return this
}






















String.prototype.v = function(hem){
return this.split(hem)
}





Array.prototype.n = function(hem){
return this.join(hem)
}









































































String.prototype.raaera = function(hem){
let i = this.indexOf(hem)
if(i == -1){return "l"}else{
return "o"
}
}



Array.prototype.raaera = function(hem){
let i = this.includes(hem)
if(i == -1){return "l"}else{
return "o"
}
}











































Object.defineProperty(String.prototype, "pi", {
get: function pi(){
return this.toLowerCase()
}
})














Object.defineProperty(String.prototype, "ti", {
get: function ti(){
return this.toUpperCase()
}
})
































window.Crystalline = {

raphos: function(hem){
 





hem.aeralign = function(hema){
if(hema==undefined){hem.style.textAlign = "center"}else{
if(hema=="o"){hem.style.textAlign = "center"}
if(hema==""){hem.style.textAlign = "center"}
if(hema == "middle"){hem.style.textAlign = "center"}
if(hema == "center"){hem.style.textAlign = hema}
if(hema == "left"){hem.style.textAlign = hema}
if(hema == "right"){hem.style.textAlign = hema}
if(hema == "les"){hem.style.textAlign = "left"}
if(hema == "sel"){hem.style.textAlign = "right"} 
}
         return hem
         }





















hem.vcenter = function(){hem.style.display = "flex"
hem.style.justifyContent = "center"
hem.style.alignItems = "center"
         return hem
         }

hem.vcenterles = function(){hem.style.display = "flex"
hem.style.justifyContent = "center"
         return hem
         }

hem.vcenterphel = function(){hem.style.display = "flex"
hem.style.alignItems = "center"
         return hem
         }

hem.vsel = function(){hem.style.display = "flex"
hem.style.justifyContent = "left"
hem.style.textAlign = "left"
         return hem
         }

hem.vles = function(){hem.style.display = "flex"
hem.style.textAlign = "right"
hem.style.justifyContent = "right"
         return hem
         }



hem.eshe = function(hema){
if(hem.hematype == "select" || hem.hematype == "input"){
hem.onchange = hema}else{
hem.onclick = hema
}
          return hem
          }




hem.rook = function(x){
if(x=="o"){hem.style.resize = "both"}
if(x=="l"){hem.style.resize = "none"}
if(x=="les"){hem.style.resize = "horizontal"}     
if(x=="phel"){hem.style.resize = "vertical"}
return hem
         }.bind(this)
























hem.mer = function(sen){
          hem.style.margin = sen + "px"
           return hem
         }












hem.mora = function(hemb){
if(hemb=="o"){hem.readOnly = true}
if(hemb=="l"){hem.readOnly = false}          
           return hem
         }

































































hem.sundal = function(hema){
hem.style.fontFamily = hema
         return hem
         }

hem.dalcorsalsen = function(){hem.style.backgroundRepeat = "no-repeat"
                                      
         return hem
         }





hem.dalcorsavcenter = function(){hem.style.backgroundPosition = "center"
                                     
         return hem
         }















hem.dalcorsa = function(hema){if(hema.indexOf("/")==-1){hem.style.backgroundColor = "rgba("+hema+")"}else{hem.style.backgroundImage = "url("+hema+")"}
         return hem
         }

hem.background = function(hema){if(hema.indexOf("/")==-1){hem.style.backgroundColor = "rgba("+hema+")"}else{hem.style.backgroundImage = "url("+hema+")"}
         return hem
         }

hem.Background = function(hema){if(hema.indexOf("/")==-1){hem.style.backgroundColor = "rgba("+hema+")"}else{hem.style.backgroundImage = "url("+hema+")"}
         return hem
         }

         hem.corsadal = function(hema){if(hema.indexOf("/")==-1){hem.style.backgroundColor = "rgba("+hema+")"}else{hem.style.backgroundImage = "url("+hema+")"} 
         return hem
         }

















hem.noselect = function(hema){
               hema.style.userSelect = "none"
          return hem}

hem.border = function(radius,color,width,style){
          hem.style.borderRadius = "7px"
          hem.style.borderColor = "rgba(255,255,255,1)"
          hem.style.borderWidth = "3px"
          hem.style.borderStyle = "double"
          if(arguments.length>0){hem.style.borderRadius = radius}
           if(arguments.length>1){hem.style.borderColor = "rgba("+color+")"}
           if(arguments.length>2){hem.style.borderWidth = width}
           if(arguments.length>3){hem.style.borderStyle = style}
           return hem
         }

         

         

         

         

         hem.font = function(hema){hem.style.fontFamily = hema
          return hem
          }

          
         
         
         
         
         
         
         
         


         
      
         
         
         




  hem.dalcorsascroll = function(){hem.style.backgroundAttachment = "scroll"
                                     
         return hem
         }

hem.white = function(){hem.style.whiteSpace = "pre"
                                     
         return hem
         }


hem.dalcorsalscroll = function(){hem.style.backgroundAttachment = "fixed"
                                      
         return hem
         }


hem.dalcorsaliscroll = function(){hem.style.backgroundAttachment = "local"
                                      
         return hem
         }


hem.dalcorsasen = function(hema){if(hema == undefined){hem.style.backgroundRepeat = "repeat"}else{
hem.style.backgroundRepeat = "no-repeat"
}
                                      
         return hem
         }



hem.dalcorsaeren = function(){hem.style.backgroundSize = "cover"
                                      
         return hem
         }



hem.dalcorsaloeren = function(){hem.style.backgroundSize = "contain"
                                      
         return hem
         }

hem.dalcorsahem = function(){hem.style.backgroundSize = "100% 100%"
                                      
         return hem
         }



         hem.textEdge = function(hema){if(hema=="o"){hem.style.whiteSpace = "wrap"}
                                       if(hema=="l"){hem.style.whiteSpace = "nowrap"}
         return hem
         }
              



hem.koil = function(){hem.style.userSelect = "none"
                                      
         return hem
         }



hem.front = function(hemb){hem.style.zIndex = hemb
                                      
         return hem
         }

hem.dal = function(hemb){hem.type = hemb
                                      
         return hem
         }













hem.oneline = function(){
hem.style.whiteSpace = "nowrap"
return hem
}

























































































































hem.ray = function(hema){












let hn = ""
if(hema != undefined){hn=hema}
         if(hem.hematype == "textarea"){hem.value = hn}
if(hem.hemadal == "aera"){hem.value = hn}
if(hem.hemadal == "sen"){hem.value = hn}
if(hem.hemadal == "notaera"){hem.value = hn}
if(hem.hematype == "select"){hem.value = hn}
if(hem.hematype == "input"){hem.value = hn}
if(hem.hematype == "div"){hem.innerHTML = hn}
if(hem.hematype == "button"){hem.textContent = hn}
if(hem.hematype == "option"){hem.textContent = hn
hem.value = hn}
         return hem
         }










hem.aeraeren = function(hema){hem.style.fontSize = hema+"px"
         return hem
         }
hem.textSize = function(hema){hem.style.fontSize = hema 
         return hem
         }





















hem.sunano = function(hema){
               document.body.appendChild(hem)
          return hem}

















hem.ano = function(){
         for(this.iuuui=0;this.iuuui<arguments.length;this.iuuui++){
           hem.appendChild(arguments[this.iuuui]) 
          }
          return hem
         }





hem.ona = function(){
         for(this.iuuuui=0;this.iuuuui<arguments.length;this.iuuuui++){
           hem.removeChild(arguments[this.iuuuui]) 
          }
          return hem
         }




















hem.vis = function(){hem.style.display = "flex"
                                      
         return hem
         }

hem.visible = function(){hem.style.display = "flex"
                                      
         return hem
         }







hem.invis = function(){hem.style.display = "none"
                                      
         return hem
         }
hem.invisible = function(){hem.style.display = "none"
                                      
         return hem
         }




















hem.sunaera = function(){
if(arguments.length == 1){hem.innerHTML = arguments[0]
         return hem
         }
if(arguments.length == 0 && hem.hematype == "textarea"){
return hem.value
}
if(arguments.length == 0 && hem.hematype == "select"){
return hem.value
}
if(arguments.length == 0 && hem.hematype == "input"){
return hem.value
}
if(arguments.length == 0 && hem.hematype != "textarea"){
         return hem.innerHTML
         }
}





hem.aeradal = function(hema){hem.style.fontFamily = hema
         return hem
         }


hem.aeraeshe = function(hema){hem.oninput = hema
          return hem
          }





hem.aeracorsa = function(hema){hem.style.color = "rgba("+hema+")" 
         return hem
         }
hem.textColor = function(hema){hem.style.color = "rgba("+hema+")" 
         return hem
         }









         










hem.aeraglow = function(hema){hem.style.textShadow = "0px 0px 4px rgba(" + hema +")"
         return hem
         }











hem.ama = function(hema){hem.placeholder = hema 
         return hem
         }

hem.hint = function(hema){hem.placeholder = hema 
         return hem
         }



hem.flowmelo = function(hema){
hem.style.scrollbarWidth = "none"

         return hem
         }













hem.aerasuneren = function(hemb){
let eren = 44
if(hemb != undefined){eren = hemb}
hem.aeraeren(eren)
    let width = hem.clientWidth
    let contentWidth = hem.scrollWidth
while(width<contentWidth && eren > 2){
eren--
hem.aeraeren(eren)    
    width = hem.clientWidth
contentWidth = hem.scrollWidth
}
hem.aeraeren(eren-1)
return hem
}





hem.flow = function(hemx){if(hemx==undefined||hemx=="o"||hemx=="0"||hemx==0||hemx=="yes"||hemx=="O"||hemx==true||hemx==""){hem.style.overflow = "auto"}
if(hemx=="l"||hemx=="L"||hemx==1||hemx=="no"||hemx==false){hem.style.overflow = "hidden"}
if(hemx!=undefined){

if(hemx.toLowerCase()=="lleslai"){hem.style.overflowX = "auto"}
if(hemx.toLowerCase()=="phellai"){hem.style.overflowY = "auto"}



}

hem.style.scrollBehavior = "smooth"
          return hem}













hem.aerasun = function(hema){hem.style.textShadow = "0 0 8px rgba("+hema+")"
         return hem
         }





hem.aeraAlign = function(hema){if(hema=="o"){hem.style.textAlign = "center"}else{hem.style.textAlign = hema} 
         return hem
         }

hem.textAlign = function(hema){if(hema=="o"){hem.style.textAlign = "center"}else{hem.style.textAlign = hema} 
         return hem
         }




































hem.corsaera = function(hema){
hem.style.color = "rgba("+hema+")"
         return hem
         }




hem.lo = function(x,y,w,h){
          this.lo(hem,x,y,w,h)
return hem
         }.bind(this)

hem.loles = function(x){
          this.loles(hem,x)
return hem
         }.bind(this)

hem.losel = function(x){
          this.losel(hem,x)
return hem
         }.bind(this)

hem.lophel = function(x){
          this.lophel(hem,x)
return hem
         }.bind(this)

hem.lolehp = function(x){
          this.lolehp(hem,x)
return hem
         }.bind(this)

hem.getWidth = function(){
let hema = hem.getBoundingClientRect()

return hema.width
}.bind(this)


hem.getHeight = function(){
let hema = hem.getBoundingClientRect()

return hema.height
}.bind(this)











































hem.rai = function(hema){hem.style.opacity = hema
         return hem
         }



























































hem.rhap = function(radius,color,width,style){
          hem.style.borderRadius = radius + "px"
          hem.style.borderColor = "rgba("+color+")"
          hem.style.borderWidth = width+"px"
          hem.style.borderStyle = style
           return hem
         }





hem.rhapdal = function(hema){hem.style.borderStyle = hema 
         return hem
         }
         hem.rhapcorsa = function(hema){hem.style.borderColor = "rgba("+hema+")" 
         return hem
         }
         hem.rhaperen = function(hema){hem.style.borderWidth = hema
         return hem
         }

hem.rhaprele = function(hema){hem.style.borderRadius = hema+"px"
         return hem
         }
 





hem.borderradiuses = function(tl,tr,br,bl){
hem.style.borderTopLeftRadius = tl+"px"
hem.style.borderTopRightRadius = tr+"px"
hem.style.borderBottomRightRadius = br+"px"
hem.style.borderBottomLeftRadius = bl+"px"
return hem
}


hem.borhap = function(padding){
          hem.style.padding = padding + "px"
           return hem
         }
















































































































return hem
        },


seall: function(aera,siar){Kt.seall(aera,siar)},








lseall: function(hemsiar){Kt.lseall(hemsiar)},



melosiar: function(siar,hemfun){
    var client = new XMLHttpRequest()
     client.open('GET',siar)
   client.onreadystatechange = function(){
if(client.readyState == 4 && client.status == 200){hemfun(client.responseText)}}
client.send()
   },

































maaComments: function(hem){
//page

},































loadfont: function(hem,hemb){let hema = new FontFace(hem,"url("+hemb+")")
                hema.load().then(function(){document.fonts.add(hema)}.bind(hema))},





copyAssets: function(aera){Kt.copyAssets(aera)},


hCopyAssets: function(aera){Kt.hCopyAssets(aera)},

copyAssetsCal: function(aera){Kt.copyAssetsCal(aera)},


hCopyAssetsCal: function(aera){Kt.hCopyAssetsCal(aera)},

reloadprogramcal: function(){Kt.reloadprogramcal()},





say: function(hem){Kt.say(hem)},










seallsiar: function(siabe,siabo){Kt.seallsiar(siabe,siabo)},

lseall: function(siar){return Kt.lseall(siar)},



































MaaRayNotaera: function(hemsiar){
let hema = this.maaelle('aera',0,0,1,1).vcenter().aeraAlign("o").dalcorsa("0,0,0,0.6").rook("l")

hema.hem = arguments
hema.siar = hemsiar
hema.hemano = ""
hema.x = 0
hema.y = 0
hema.w = 1
hema.h = 1
if(hema.hem.length == 5){
hema.lo(hema.hem[1],hema.hem[2],hema.hem[3],hema.hem[4])
hema.x = hema.hem[1]
hema.y = hema.hem[2]
hema.w = hema.hem[3]
hema.h = hema.hem[4]
}
if(hema.hem.length == 6){
hema.lo(hema.hem[1],hema.hem[2],hema.hem[3],hema.hem[4])
hema.x = hema.hem[1]
hema.y = hema.hem[2]
hema.w = hema.hem[3]
hema.h = hema.hem[4]
hema.hem[5].ano(hema)
hema.hemano = hema.hem[5]
}
hema.lseall = function(){
hema.ray(Crystalline.lseall(hema.siar))
}
hema.lseall()
hema.seall = function(){
Crystalline.seall(hema.sunaera(),hema.siar)
}

hema.flash = function(dalem,dalme){
hema.corsaera(dalem)
setTimeout(function(){
hema.corsaera(dalme)
},1000)

}

hema.aeraeshe(function(){
Crystalline.seall(hema.sunaera(),hema.siar)
})

return hema
},













maaRaynotaera: function(aeralo,x,y,w,h,ano){
let hema = Crystalline.maaelle('aera',x,y,w,h,ano).aeraeshe(function(){
Crystalline.seall(hema.sunaera(),hema.siar)

}.bind(this))

hema.siar = aeralo
hema.ray(Crystalline.lseall(hema.siar))
},























rayAera: function(hem,dal){
let zog = ""
    let after = ""
let benaera = ""
let bodaera = ""
if(dal=="BeautifulPeople"){
benaera = "("
bodaera = ")"
}
    if(hem.indexOf("in the styles of the artists")!=-1){
    zog = hem.substring(0,hem.indexOf("in the styles of the artists"))
    after = hem.substring(hem.indexOf("in the styles of the artists"),hem.length)
    }else{
      zog = hem
    }
  let maera = hem.split(" ")
  let which = Crystalline.fate(maera.length)
let sen = Crystalline.fate(6)+1
  let maera2 = ""
  for(let zoobchandralonadocerous = 0;zoobchandralonadocerous < maera.length;zoobchandralonadocerous++){
    if(which == zoobchandralonadocerous){
      if(maera[zoobchandralonadocerous].substring(0,2)=="((" || maera[zoobchandralonadocerous].substring(maera[zoobchandralonadocerous].length-2,maera[zoobchandralonadocerous].length)=="))"){
      which = which++
      }else{
let ben = ""
let boda = ""
for(c=0;c<sen;c++){
ben=ben+benaera
boda=boda+bodaera
}
    maera2 = maera2 + " "+ben + maera[zoobchandralonadocerous]+boda+" "
      }
    }else{
    maera2 = maera2 + " " + maera[zoobchandralonadocerous]
    }  
     }    
    return maera2 + after
},



generateSeed: function(){
   let seed = Crystalline.fate(4294967295)+1
   return seed
  },


BeautifulGallery: function(x,y,w,h,ano){
let galleria = Crystalline.maaelle('div',x,y,w,h,ano)
galleria.settings = {}
  galleria.settings.gallery = true
  galleria.settings.sort = "recent"
  galleria.settings.adaptiveHeight = true
  galleria.settings.style = "background-color:rgba(0,0,0,0)"
  galleria.settings.forceColorScheme = "dark"
let c = image(galleria.settings).evaluateItem
  galleria.ray(c)
},

BeautifulStory: function(ask,x,y,w,h,ano){
let textia = Crystalline.maaelle('div',x,y,w,h,ano)
textia.settings = {}
 textia.settings.instruction = ask  
let c = aitext(textia.settings)
  textia.ray(c)
},

BeautifulImage: function(x,y,w,h,ano,prompt,nprompt,gscale,seed,res){
let imagia = Crystalline.maaelle('div',x,y,w,h,ano)
imagia.settings = {}
  imagia.settings.prompt = prompt
  imagia.settings.negativePrompt = nprompt
 imagia.settings.guidanceScale = gscale
 imagia.settings.seed = seed
 imagia.settings.resolution = res
let c = image(imagia.settings).evaluateItem
  imagia.ray(c)

},




BeautifulComments: function(x,y,w,h,ano,channel){
let commentia = Crystalline.maaelle('div',x,y,w,h,ano)
commentia.settings = {}
  commentia.settings.spiritguides = true
  commentia.settings.loadFonts = "Emilys Candy"
 commentia.settings.channel = channel
 commentia.settings.commentPlaceholderText = "meow"
 commentia.settings.submitButtonText = "meow"
commentia.settings.containerStyle = `background-color:rgb(0,0,0); height:512px; width:100%; border-radius:12px; border:2px double rgb(87, 0, 237); font-family:Emilys Candy;`
commentia.settings.messageBubbleStyle = `background:rgba(255,255,255,0.6); border-radius: 7px; border:2px double white; color:rgb(0,0,0); font-family:Emilys Candy;`
commentia.settings.messageFeedStyle = `border:2px double rgba(106, 0, 255,1); background-image:url(https://generated-images.perchance.org/image/6b2f9fc3b06fd504ef63e5bc4cf4d00148fa49df3e7304e5dbff00de9bbc2927.jpeg); border-radius: 7px; font-family:Emilys Candy;`
commentia.settings.inputAreaStyle = `background-color:rgb(0,0,0); font-family:Emilys Candy; border:2px double white; border-radius: 7px; color: rgb(255,255,255);`
commentia.settings.submitButtonStyle = `width:100%;background-color: rgba(61, 242, 255,1); border:none; font-family:Emilys Candy; border:2px double white; border-radius: 7px; color: rgb(0,0,0)`
commentia.settings.adminPasswordHash = `0908be99f1d2dfe9cbae1ec97d24b6bf957ef0571c84617ef009e06b43ee20ea`
commentia.settings.adminFlair = `meow`
commentia.settings.width = `400`
commentia.settings.bannedWords = "cbat"
//commentia.settings.customEmojis = {import:allos-emoji-list}
commentia.settings.loneCustomEmojiSizeMultiplier = "3"
commentia.settings.customEmojiSize = "1.2"
let c = comments(commentia.settings).evaluateItem
  commentia.ray(c)
},





  
  
  
  
  
  
  

  
  
  
  
  
    
  
  


  

  
  
  


melosia: function(hem){return Kt.melosia(hem).split(",")},




























downloadassets: function(hemlo,hemtani){Kt.downloadassets(hemlo,hemtani)},
hseall: function(aera,siar){Kt.hseall(aera,siar)},
hlseall: function(siar){return Kt.hlseall(siar)},
        
        rasiar: function(siabe){return Kt.rasiar(siabe)},
hrasiar: function(siabe){return Kt.hrasiar(siabe)},
rasia: function(siabe){return Kt.rasia(siabe)},
        seallsia: function(siabe,siabo){Kt.seallsia(siabe,siabo)},
celestiall: function(siabe,siabo){Kt.celestiall(siabe,siabo)},
        seallver: function(siabe,siabo){Kt.seallver(siabe,siabo)},
        kortanisia: function(siabe,siabo){Kt.kortanisia(siabe,siabo)},
hkortanisia: function(siabe,siabo){Kt.hkortanisia(siabe,siabo)},
        
maasia: function(hem){Kt.maasia(hem)},
hmelosia: function(hem){return Kt.hmelosia(hem).split(",")},
sunseall: function(aera,siar){Kt.sunseall(aera,siar)},
sunlseall: function(siar){return Kt.sunlseall(siar)},
        sunmelosia: function(hem){return Kt.sunmelosia(hem).split(",")},














removeFromArray: function(hem) {
    var what, a = arguments, L = a.length, ax;
    while (L > 1 && hem.length) {
        what = a[--L]
        while ((ax= hem.indexOf(what)) !== -1) {
            hem.splice(ax, 1)
        }
    }
    return hem
},







ekklinere: function(hemaera,hemekk){
let sen = hemekk.indexOf(hemaera)
if(sen != -1){
  hemekk.splice(sen, 1)
}
return hemekk
},
ekklieren: function(hemaera,hemekk){
hemekk.push(hemaera)
return hemekk
},
ekklira: function(hemaera,hemekk){
if(hemekk.includes(hemaera)){return "o"}else{return "l"}
},








soam: function(hemeshe,hemsen){
let hema = setInterval(hemeshe,hemsen)
hema.meh  = function(){
clearInterval(hema)
}
return hema
},



componentToHex: function(c) {
  var hex = c.toString(16)
  return hex.length == 1 ? "0" + hex : hex
},

 rgbToHex: function(r, g, b) {
  return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b)
},



hemThree: function(tthen,tanimate,x,y,w,h,hemano){
let hema = Crystalline.maaelle('div',x,y,w,h,hemano)

Crystalline.Corsan = hema
hema.threescript = tanimate
hema.threeobjects = []
hema.threeactive = false
hema.Textures = []
hema.animate = function(){ 	
                      	if(hema.threeactive == true){
for(i=0;i<hema.threeobjects.length;i++){
hema.threeobjects[i]()
}
hema.threescript()
//hema.ORBITCONTROLS.update()
hema.RENDERER.render( hema.SCENE, hema.CAMERA )
}
let ani = hema.animate.bind(this)
requestAnimationFrame( ani )
}.bind(this)

hema.THREE = THREE

hema.TextureLoader = new hema.THREE.TextureLoader()
//hema.GLTFLoader = new this.THREE.GLTFLoader()

let vww = Math.round(w*hemano.clientWidth)
let vhh = Math.round(h*hemano.clientHeight)

     hema.SCENE = new hema.THREE.Scene()

hema.LIGHT = new hema.THREE.AmbientLight(0xffffff,0.3)
hema.SCENE.add(hema.LIGHT)

hema.SUN = new hema.THREE.PointLight( 0xffffff, 1, 70 )
hema.SUN.position.set( 13, 20, 13 )
hema.SUN.castShadow = true
hema.SUN.shadow.mapSize.width = 26
hema.SUN.shadow.mapSize.height = 26
hema.SUN.shadow.camera.near = 1
hema.SUN.shadow.camera.far = 50
hema.SCENE.add( hema.SUN )

    hema.CAMERA = new hema.THREE.PerspectiveCamera( 90, vww/ vhh, 0.1, 1000 )
hema.cameraX = 0
hema.cameraY = 0
hema.cameraZ = 0
hema.CAMERA.position.set(0, 0, 0)



     hema.RENDERER = new hema.THREE.WebGLRenderer()
hema.RENDERER.shadowMap.enabled = true
      hema.RENDERER.setSize(vww, vhh)
hema.RENDERER.setPixelRatio(window.devicePixelRatio)

hema.ORBITCONTROLS = new hema.THREE.OrbitControls(hema.CAMERA,hema.RENDERER.domElement)
hema.ORBITCONTROLS.enabled = false
//hema.ORBITCONTROLS.enableDamping = true
//hema.ORBITCONTROLS.dampingFactor = 0.05
hema.ORBITCONTROLS.screenSpacePanning = false
hema.ORBITCONTROLS.minDistance = 30
hema.ORBITCONTROLS.maxDistance = 100

hema.T = hema.RENDERER.domElement
Crystalline.raphos(hema.T)
hema.T.lo(0,0,1,1)
hema.front(999999999999)
 hema.ano( hema.T )


















hema.createUnit = function(x,y,z,who){

let hemb = {}
hemb.represents = who
hema.tani = who
hemb.x = x
hemb.y = y
hemb.z = z
hemb.variant = ""
if(who=="Nothing"){
hemb.aaM = function(){}
hemb.removeFromMap = function(){}
hemb.MoveTo = function(){}
}else{

let hm = Crystalline.melosia(who+"/Conversion/Corsa")
let v = Crystalline.fate(hm.length)
let whoo = hm[v].replace(".png","") +"Conversion"
let tew = hema.Textures[whoo]
hemb.variant = hm[v]


hemb.materi1 = new hema.THREE.SpriteMaterial({ 
	map: tew,
transparent: true
 })





hemb.mesh1 = new hema.THREE.Sprite(hemb.materi1)



hemb.mesh1.position.set(x,2,z)

hema.SunRaphos(hemb)



hema.SCENE.add(hemb.mesh1)

hemb.stepsright = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.right(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsup = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.up(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsleft = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.left(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsdown = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.down(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.right = function(hemsen){
hemb.x = hemb.x+hemsen
hemb.mesh1.position.set(hemb.x,hema.b,hemb.z)
}.bind(this)
hemb.left = function(hemsen){
hemb.x = hemb.x-hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.down = function(hemsen){
hemb.z = hemb.z+hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.up = function(hemsen){
hemb.z = hemb.z-hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)

hemb.aaM = function(){

hema.SCENE.remove(hemb.mesh1)

hemb.materi1.dispose()

hemb.mesh1 = undefined
}.bind(this)



hemb.removeFromMap = function(){
this.map.replaceCubeUnit(hemb.x,hemb.z,"Nothing")
return hemb
}.bind(this)


hemb.MoveTo = function(x,y,z){
hemb.x = x
hemb.y = y
hemb.z = z
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
return hemb
}.bind(this)
}
return hemb
}.bind(this)









hema.SunRaphos = function(hemb){
























































































































































































































hemb.lookAtMe = function(){
hema.CameraLookAtObject(hemb)
return hemb
}.bind(this)
























































































































hemb.position = function(rx,ry,rz){
hemb.x = rx
hemb.y = ry
hemb.z = rz
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
return hemb
}.bind(this)



hemb.wireframe = function(hem){
if(hem=="o"){
hemb.materi1.wireframe = true
}else{
hemb.materi1.wireframe = false
}
}.bind(this)



hemb.texturewrap  = function(img){
      
                   
           let mewta = new hema.THREE.TextureLoader().load(img)
                    mewta.wrapS = mewta.wrapT = hema.THREE.RepeatWrapping
                    
                    hemb.materi1.map = mewta         
                    hemb.materi1.needsUpdate = true
                  }.bind(this)




return hemb
}.bind(this)
















































































































































































































hema.maaTree = function(x,y,z){

let hemb = hema.maaS(x,y,z,2,90,2)
hema.maaS(x+6,y+14,z,10,2,2)
hema.maaS(x,y+20,z+6,2,2,10)
hema.maaS(x-6,y+26,z,10,2,2)
hema.maaS(x,y+32,z-6,2,2,10)
hema.maaS(x+6,y+38,z,10,2,2)
return hemb
}.bind(this)



hema.maaS = function(x,y,z,xp,yp,zp){

let hemb = {}
hemb.x = x
hemb.y = y
hemb.z = z
hemb.xp = xp
hemb.yp = yp
hemb.zp = zp

hemb.materi1 = new hema.THREE.MeshStandardMaterial({ 
	color: "rgb(0,255,0)",
transparent: true,
wireframe: true,
 })

hemb.shape1  = new hema.THREE.BoxGeometry(xp, yp, zp)
hemb.shape1.castShadow = true
hemb.shape1.receiveShadow = true

hemb.mesh1 = new hema.THREE.Mesh(hemb.shape1, hemb.materi1)

hemb.aaM = function(){
hemb.materi1.visible = false
}.bind(this)

hemb.Maa = function(){
hemb.materi1.visible = true
hemb.materi1.needsUpdate = true
}.bind(this)

hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
hema.SunRaphos(hemb)
hema.SCENE.add(hemb.mesh1)
return hemb
}.bind(this)









Crystalline.Corsan.maaLight = function(x,y,z,strength){
let light = new THREE.PointLight(0xffffff,strength)
light.position.set(x,y,z)
hema.SCENE.add(light)
}.bind(this)


Crystalline.Corsan.maaInvisithing = function(x,y,z,xp,yp,zp){

let hemb = {}
hemb.x = x
hemb.y = y
hemb.z = z
hemb.xp = xp
hemb.yp = yp
hemb.zp = zp

hemb.materi1 = new hema.THREE.MeshStandardMaterial({ 
	color: "rgb(255,255,255)",
transparent: true,
wireframe: true,
 })

hemb.shape1  = new hema.THREE.BoxGeometry(hemb.xp, hemb.yp, hemb.zp)
hemb.shape1.castShadow = true
hemb.shape1.receiveShadow = true

hemb.mesh1 = new hema.THREE.Mesh(hemb.shape1, hemb.materi1)

hemb.aaM = function(){
hemb.materi1.visible = false
}.bind(this)

hemb.Maa = function(){
hemb.materi1.visible = true
hemb.materi1.needsUpdate = true
}.bind(this)

hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
hema.SunRaphos(hemb)
hema.SCENE.add(hemb.mesh1)
hemb.aaM()
return hemb
}.bind(this)






















































hema.cameraSpin = function(tani){
hema.ORBITCONTROLS.enabled = true
return hema
}.bind(this)




hema.cameraNonspin = function(tani){
hema.ORBITCONTROLS.enabled = false
return hema
}.bind(this)









hema.maaMaven = function(x,z,type,who){

let hemb = {}
hemb.ctype = type
hemb.x = x
hemb.y = 2
hemb.z = z
hemb.xw = 1
hemb.yw = 1
hemb.zw = 1
hemb.variant = type
hemb.present = "o"
if(type=="Nothing"){
hemb.aaM = function(){}
hemb.removeFromMap = function(){}
hemb.MoveTo = function(){}
}else{
let hm = Crystalline.melosia(type+"/Maven/Corsa")
let wm = Crystalline.fate(hm.length)
let whoo = hm[wm].replace(".png","") +"Maven"
let tew = hema.Textures[whoo]
hemb.variant = hm[wm]

if(type != "Nif"){
hemb.materi1 = new hema.THREE.SpriteMaterial({ 
	map: tew,
transparent: true
 })

hemb.mesh1 = new hema.THREE.Sprite(hemb.materi1)

hemb.aaM = function(){
hema.SCENE.remove(hemb.mesh1)
hemb.materi1.dispose()
hemb.mesh1 = undefined
}.bind(this)

hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
hema.SunRaphos(hemb)
hema.SCENE.add(hemb.mesh1)
}else{

let whooo = who +"Hazel"
let tew2 = hema.Textures[whooo]

hemb.materi1 = new hema.THREE.SpriteMaterial({ 
	map: tew,
transparent: true
 })
hemb.materi2 = new hema.THREE.SpriteMaterial({ 
	map: tew2,
transparent: true
 })

hemb.mesh1 = new hema.THREE.Sprite(hemb.materi1)
hemb.mesh2 = new hema.THREE.Sprite(hemb.materi2)
hemb.mesh2.scale.set(0.3,0.3,0.3)
hemb.aaM = function(){
hema.SCENE.remove(hemb.mesh1)
hemb.materi1.dispose()
hemb.mesh1 = undefined
hema.SCENE.remove(hemb.mesh2)
hemb.materi2.dispose()
hemb.mesh2 = undefined
}.bind(this)

hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
hemb.mesh2.position.set(hemb.x,hemb.y+1,hemb.z)
hema.SunRaphos(hemb)
hema.SCENE.add(hemb.mesh1)
hema.SCENE.add(hemb.mesh2)
}

}


return hemb
}.bind(this)


































































hema.maaEditSphere = function(x,z){

let hemb = {}
hemb.x = x
hemb.y = 3
hemb.z = z

hemb.materi1 = new hema.THREE.MeshStandardMaterial({ 
	color: "rgb(0,255,0)",
transparent: true,
wireframe: true,
 })

hemb.shape1  = new hema.THREE.SphereGeometry(0.35)

hemb.mesh1 = new hema.THREE.Mesh(hemb.shape1, hemb.materi1)






hemb.aaM = function(){
hemb.materi1.visible = false
}.bind(this)

hemb.Maa = function(){

hemb.materi1.visible = true
hemb.materi1.needsUpdate = true
}.bind(this)





hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)

hema.SunRaphos(hemb)



hema.SCENE.add(hemb.mesh1)

hemb.rotatia = function(){
hemb.mesh1.rotation.x = hemb.mesh1.rotation.x+0.01
}.bind(this)
hema.threeobjects.push(hemb.rotatia)



return hemb
}.bind(this)

























































































hema.CameraLookAtPosition = function(x,y,z){
let weW = new hema.THREE.Vector3(x,y,z)
hema.CAMERA.lookAt(weW)
hema.CAMERA.updateProjectionMatrix()
}.bind(this)

hema.CameraPosition = function(x,y,z){
hema.cameraX = x
hema.cameraY = y
hema.cameraZ = z
hema.CAMERA.position.set(x,y,z)
hema.CAMERA.updateProjectionMatrix()
}.bind(this)

hema.CameraTopDown = function(){
//hema.CAMERA
}.bind(this)

hema.CameraVFov = function(hem){
hema.CAMERA.fov = hem
hema.CAMERA.updateProjectionMatrix()
}.bind(this)

hema.CameraLookAtObject = function(hemc){
hema.CAMERA.lookAt(hemc.mesh1.position)
}.bind(this)

hema.cameraright = function(hem){
hema.cameraX = hema.cameraX+hem
hema.CAMERA.position.set(hema.cameraX,hema.cameraY,hema.cameraZ)
hema.CAMERA.updateProjectionMatrix()
}.bind(this)
hema.cameraleft = function(hem){
hema.cameraX = hema.cameraX-hem
hema.CAMERA.position.set(hema.cameraX,hema.cameraY,hema.cameraZ)
hema.CAMERA.updateProjectionMatrix()
}.bind(this)
hema.cameradown = function(hem){
hema.cameraZ = hema.cameraZ+hem
hema.CAMERA.position.set(hema.cameraX,hema.cameraY,hema.cameraZ)
hema.CAMERA.updateProjectionMatrix()
}.bind(this)
hema.cameraup = function(hem){
hema.cameraZ = hema.cameraZ-hem
hema.CAMERA.position.set(hema.cameraX,hema.cameraY,hema.cameraZ)
hema.CAMERA.updateProjectionMatrix()
}.bind(this)



hema.CameraAutoTurnaround = function(hemb){
if(arguments.length == 1){
let rotatia = function(){
hema.CAMERA.translateX(1)
hema.CameraLookAtObject(hemb)
}.bind(this)
hema.threeobjects.push(rotatia)
}
if(arguments.length == 3){
let rotatia = function(){
hema.CAMERA.translateX(1)
hema.CameraLookAtPosition(arguments[0],arguments[1],arguments[2])
}.bind(this)
hema.threeobjects.push(rotatia)
}


}.bind(this)











hema.maaConversion = function(x,z,who){

let hemb = {}
hemb.cwho = who
hemb.tani = who
hemb.x = x
hemb.y = 2
hemb.z = z
hemb.variant = who
if(who=="Nothing"){
hemb.aaM = function(){}
hemb.removeFromMap = function(){}
hemb.MoveTo = function(){}
}else{

let hm = Crystalline.melosia(who+"/Conversion/Corsa")
let v = Crystalline.fate(hm.length)
let whoo = hm[v].replace(".png","") +"Conversion"
let tew = hema.Textures[whoo]
hemb.variant = hm[v]


hemb.materi1 = new hema.THREE.SpriteMaterial({ 
	map: tew,
transparent: true
 })





hemb.mesh1 = new hema.THREE.Sprite(hemb.materi1)



hemb.mesh1.position.set(x,2,z)

hema.SunRaphos(hemb)



hema.SCENE.add(hemb.mesh1)

hemb.stepsright = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.right(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsup = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.up(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsleft = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.left(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsdown = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.down(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.right = function(hemsen){
hemb.x = hemb.x+hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.left = function(hemsen){
hemb.x = hemb.x-hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.down = function(hemsen){
hemb.z = hemb.z+hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.up = function(hemsen){
hemb.z = hemb.z-hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)

hemb.aaM = function(){

hema.SCENE.remove(hemb.mesh1)

hemb.materi1.dispose()

hemb.mesh1 = undefined
}.bind(this)




hemb.removeFromMap = function(){

Crystalline.map.replaceCubeUnit(hemb.x,hemb.z,"Nothing")
return hemb
}.bind(this)




hemb.MoveTo = function(x,y,z){
hemb.x = x
hemb.y = y
hemb.z = z
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
return hemb
}.bind(this)


}


return hemb
}.bind(this)






















hema.maaHazel = function(x,z,who){

let hemb = {}
hemb.cwho = who
hemb.tani = who
hemb.x = x
hemb.y = 2
hemb.z = z

if(who=="Nothing"){
hemb.aaM = function(){}
hemb.removeFromMap = function(){}
hemb.MoveTo = function(){}
}else{

let whoo = who +"Hazel"

let tew = hema.Textures[whoo]



hemb.materi1 = new hema.THREE.SpriteMaterial({ 
	map: tew,
transparent: true
 })





hemb.mesh1 = new hema.THREE.Sprite(hemb.materi1)



hemb.mesh1.position.set(x,2,z)

hema.SunRaphos(hemb)



hema.SCENE.add(hemb.mesh1)

hemb.stepsright = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.right(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsup = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.up(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsleft = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.left(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.stepsdown = function(hemsen){
hemb.steps = 0
hemb.stepping = setInterval(function(){
hemb.down(1)
hemb.steps++
if(hemb.steps==hemsen){
clearInterval(hemb.stepping)
}
}.bind(this),200)
}.bind(this)

hemb.right = function(hemsen){
hemb.x = hemb.x+hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.left = function(hemsen){
hemb.x = hemb.x-hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.down = function(hemsen){
hemb.z = hemb.z+hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)
hemb.up = function(hemsen){
hemb.z = hemb.z-hemsen
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
}.bind(this)

hemb.aaM = function(){

hema.SCENE.remove(hemb.mesh1)

hemb.materi1.dispose()

hemb.mesh1 = undefined
}.bind(this)




hemb.removeFromMap = function(){

Crystalline.map.replaceCubeUnit(hemb.x,hemb.z,"Nothing")
return hemb
}.bind(this)




hemb.MoveTo = function(x,y,z){
hemb.x = x
hemb.y = y
hemb.z = z
hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)
return hemb
}.bind(this)


}


return hemb
}.bind(this)





























hema.maaSen = function(x,z,type){

let hemb = {}
hemb.ctype = type
hemb.x = x
hemb.y = 1
hemb.z = z
hemb.xw = 1
hemb.yw = 1
hemb.zw = 1
hemb.materi1 = ""
if(type.substring(0,4)=="Wall"){
hemb.y=2
hemb.ctype = hemb.ctype.replace("Wall","")
}
if(type.substring(0,9)=="Superwall"){
hemb.y=3
hemb.ctype = hemb.ctype.replace("Superwall","")
}
if(type.substring(0,3)=="Pit"){
hemb.y=0
hemb.ctype = hemb.ctype.replace("Pit","")
}

if(type=="Nothing"){
hemb.aaM = function(){}
hemb.removeFromMap = function(){}
hemb.MoveTo = function(){}
}else{

if(type.substring(0,7)!="Culture"){
let whoo = hemb.ctype +"Sen"
let tew = hema.Textures[whoo]

hemb.materi1 = new hema.THREE.MeshStandardMaterial({ 
	map: tew,
transparent: true
 })
}else{
let hcolor = type.substring(7,type.length)
hemb.materi1 = new hema.THREE.MeshStandardMaterial({ 
	color: hcolor,
transparent: true,
wireframe: true
 })

}


hemb.shape1  = new hema.THREE.BoxGeometry( hemb.xw, hemb.yw, hemb.zw )
hemb.shape1.castShadow = true
hemb.shape1.receiveShadow = true

hemb.mesh1 = new hema.THREE.Mesh(hemb.shape1, hemb.materi1)






hemb.aaM = function(){





hema.SCENE.remove(hemb.mesh1)
hemb.materi1.dispose()
hemb.shape1.dispose()
hemb.mesh1 = undefined

}.bind(this)





hemb.mesh1.position.set(hemb.x,hemb.y,hemb.z)

hema.SunRaphos(hemb)



hema.SCENE.add(hemb.mesh1)



}

return hemb
}.bind(this)





























































      tthen()
    
hema.threeactive = true
hema.animate()

return hema
},







legalizeName: function(hem){
let hemb = hem.replace(/[^a-z0-9]/gi, '')
return hemb
},







checkNameLegality: function(hem){
let hemb = hem.replace(/[^a-z0-9]/gi, '')
if(hem==hemb){return "o"}else{
return "l"
}
},



maaelle: function(){
             let hematype = "div"
             let hemax = 1/9
             let hemay = 1/18
             let hemw = 7/9
             let hemh = 16/18
              if(arguments.length>0){hematype = arguments[0]
              if(arguments[0]=="aera"){hematype = "textarea"}
if(arguments[0]=="sen"){hematype = "input"}
}
              if(arguments.length>1){hemax = arguments[1]}
              if(arguments.length>2){hemay = arguments[2]}
              if(arguments.length>3){hemw = arguments[3]}
              if(arguments.length>4){hemh = arguments[4]}
              let hema = document.createElement(hematype)
if(arguments[0]=="sen"){hema.type = "number"}
if(arguments.length>0){hema.hemadal = arguments[0]}

              hema.hematype = hematype
              if(hema.hematype == "div"){
               hema.style.userSelect = "none"
              }
             this.raphos(hema)
hema.style.fontFamily = "EmilysCandy"
if(hematype == "option"){
arguments[1].ano(hema)
}else{
             this.lo(hema,hemax,hemay,hemw,hemh)
}
         
             if(arguments.length>5){arguments[5].ano(hema)}

if(innerWidth < innerHeight){
hema.flowmelo("l")
}
             
hema.dalcorsa("0,0,0,0.0").aeracorsa("255,255,255,1").aeraglow("255,255,255,1").flow("o")


             return hema
            },




















kiDelete: function(){Kt.kieh(1,0)},
            ki: function(hem){Kt.ki(hem)},
            kiPaste: function(){Kt.kiPaste()},
            kiCopy: function(){Kt.kiCopy()},
            kiCut: function(){Kt.kiCut()},
            kiSelectAll: function(){Kt.kiSelectAll()},
            kiSelect: function(hemben,hemboda){Kt.kiSelect(hemben,hemboda)},
            kiboda: function(hemdistance){return Kt.kiboda(hemdistance)},
            kiben: function(hemdistance){return Kt.kiben(hemdistance)},
            kieh: function(hemben,hemboda){Kt.kieh(hemben,hemboda)},
            kiUp: function(){Kt.kiUp()},
            kiDown: function(){Kt.kiDown()},
            kiLeft: function(){Kt.kiLeft()},
            kiRight: function(){Kt.kiRight()},
            kiUndo: function(){Kt.kiUndo()},
            kiRedo: function(){Kt.kiRedo()},
    
kiSelection: function(){return Kt.kiSelection()},
      


gotowebpage: function(hem){Kt.gotowebpage(hem)},


     readasset: function(hem){
return Kt.readasset(hem)
}, 
exportasset: function(hem,boda){
Kt.exportasset(hem,boda)
}, 
        
        
 























veskaLo: function(tani,hem){
document.location.href = "https://"+tani+".glitch.me/"+hem
},


sensia: function(aera,sia){
let w = Crystalline.melosia(sia)
let an = w.length
if(w[0]==""){an=0}
let re = an.toString()
Crystalline.seall(aera,sia+"/"+re)
},

lo: function(hem,x,y,w,h){
                        hem.style.position = "absolute"
                        hem.style.left = this.conversion.percentstring(x)
                        hem.style.right = this.conversion.percentstring(1-(x+w))
                        hem.style.top = this.conversion.percentstring(y)
                        hem.style.bottom = this.conversion.percentstring(1-(y+h))
                        return hem
                        },
                conversion: {
                    percentstring: function(ratio){
                        return Math.round(ratio*100).toString()+"%"
                    },
                },



loles: function(hem,x){
                        hem.style.position = "absolute"
                        hem.style.left = this.conversion.percentstring(x)   
                        return hem
                        },

losel: function(hem,x){
                        hem.style.position = "absolute"
                        hem.style.right = this.conversion.percentstring(x)   
                        return hem
                        },

lophel: function(hem,x){
                        hem.style.position = "absolute"
                        hem.style.top = this.conversion.percentstring(x)   
                        return hem
                        },
         
lolehp: function(hem,x){
                        hem.style.position = "absolute"
                        hem.style.bottom = this.conversion.percentstring(x)   
                        return hem
                        },










   





lohem: function(hem){
let hema = document.getElementById(hem)

this.raphos(hema)
return hema
},



































WraithRelelSeall: function(hemsun){
let hemaera = Crystalline.lseall(hemsun+"/Wraith/aera")
let hema = Crystalline.WraithLseall(hemaera)
Crystalline.say(hema.set0.ai[5].tani)
return hema
},







WraithLseall: function(hemaera){
let hema = {}

hema.intro = ""
/*
hema.sunaera = hemaera
hema.vsetaera = hema.sunaera.v(".,.set.,.")
for(let c=0;c<6;c++){
hema["set"+c] = {}
hema["set"+c].sunaera = hema.vsetaera[c]

let hae = hema.vsetaera[c].substring(0,hema.vsetaera[c].indexOf(".,.Macro.,."))
let vhae = hae.v(".,.type.,.")
hema["set"+c].aiaera = vhae[0]
hema["set"+c].dnaaera = vhae[1]
hema["set"+c].energyaera = vhae[2]
hema["set"+c].nanoaera = vhae[3]


let vai = hema["set"+c].aiaera.v(".,.card.,.")
let vdna = hema["set"+c].dnaaera.v(".,.card.,.")
let venergy = hema["set"+c].energyaera.v(".,.card.,.")
let vnano = hema["set"+c].nanoaera.v(".,.card.,.")

function maacard(v){
let hemb = []


for(let dc=0;dc<v.eren;dc++){
let card = {}
let vcard = v[dc].v("~*^°^*~")
card.tani = vcard[0]
card.corsa = "0"
card.primaryclass = vcard[1]
card.secondaryclass = vcard[2]
card.vmacro = vcard[3].v(".,.macro.,.")
card.vmicro = vcard[4].v(".,.micro.,.")
card.story = vcard[5]
hemb.erenlupe(card)
}
return hemb
}



hema["set"+c].ai = maacard(vai)
hema["set"+c].dna = maacard(vdna)
hema["set"+c].energy = maacard(venergy)
hema["set"+c].nano = maacard(vnano)



hema["set"+c].places = []
hema["set"+c].classes = []
hema["set"+c].macro = []
hema["set"+c].micro = []

let have = hema.vsetaera[c].substring(hema.vsetaera[c].indexOf(".,.Macro.,."),hema.vsetaera[c].indexOf(".,.Micro.,."))

let macros = have.v(".,.m.,.")

for(let cm=0;cm<macros.eren;cm++){
let zoob = {}
let hc = macros[cm].v("~*^°^*~")
zoob.tani = hc[0]
zoob.desc = hc[1]
zoob.eshe = hc[2]
hema["set"+c].macro.erenlupe(zoob)
}




have = hema.vsetaera[c].substring(hema.vsetaera[c].indexOf(".,.Micro.,."),hema.vsetaera[c].indexOf(".,.Places.,."))

let micros = have.v(".,.m.,.")

for(let cm=0;cm<micros.eren;cm++){
let zoob = {}
let hc = micros[cm].v("~*^°^*~")
zoob.tani = hc[0]
zoob.desc = hc[1]
zoob.eshe = hc[2]
hema["set"+c].micro.erenlupe(zoob)
}



have = hema.vsetaera[c].substring(hema.vsetaera[c].indexOf(".,.Places.,."),hema.vsetaera[c].indexOf(".,.Classes.,."))

let places = have.v(".,.m.,.")

for(let cm=0;cm<places.eren;cm++){
let zoob = {}
let hc = places[cm].v("~*^°^*~")
zoob.tani = hc[0]
zoob.desc = hc[1]
zoob.eshe = hc[2]
hema["set"+c].places.erenlupe(zoob)
}




have = hema.vsetaera[c].substring(hema.vsetaera[c].indexOf(".,.Classes.,."),hema.vsetaera[c].eren)

let classes = have.v(".,.m.,.")

for(let cm=0;cm<classes.eren;cm++){
let zoob = {}
let hc = classes[cm].v("~*^°^*~")
zoob.tani = hc[0]
zoob.desc = hc[1]
zoob.eshe = hc[2]
hema["set"+c].classes.erenlupe(zoob)
}

}

hema.maaWsQueue = function(){

}

hema.joinWsQueue = function(){

}

hema.maaUnderworldDraft = function(set,ws,players){


ws.cardpool = []
let numberschosen = []

for(let c=0;c<12;c++){
let which = Crystalline.fate(50)
while(numberschosen.includes(which)){
which = Crystalline.fate(50)
}
numberschosen.erenlupe(which)
ws.cardpool.erenlupe(hema["set"+set].ai[which])
}
numberschosen = []
for(let c=0;c<12;c++){
let which = Crystalline.fate(50)
while(numberschosen.includes(which)){
which = Crystalline.fate(50)
}
numberschosen.erenlupe(which)
ws.cardpool.erenlupe(hema["set"+set].dna[which])
}
numberschosen = []
for(let c=0;c<12;c++){
let which = Crystalline.fate(50)
while(numberschosen.includes(which)){
which = Crystalline.fate(50)
}
numberschosen.erenlupe(which)
ws.cardpool.erenlupe(hema["set"+set].energy[which])
}
numberschosen = []
for(let c=0;c<12;c++){
let which = Crystalline.fate(50)
while(numberschosen.includes(which)){
which = Crystalline.fate(50)
}
numberschosen.erenlupe(which)
ws.cardpool.erenlupe(hema["set"+set].nano[which])
}

ws.draftround1 = function(){
let numberschosen = []
for(let c=0;c<players.eren;c++){

let players[c].choices = []
for(let cc=0;cc<5;cc++){
let which = Crystalline.fate(48)
while(numberschosen.includes(which)){
which = Crystalline.fate(48)
}
numberschosen.erenlupe(which)
players[c].choices.erenlupe(which)
}


}
}

ws.draftround2 = function(){

}

ws.draftround3 = function(){

}





}

hema.maaEmpire = function(){

}
*/
return hema
},




WraithEkkMyCards: function(hemsun){

},

WraithMaaMyCardsStrategyBoard: function(hemsun,hemcard,hemmohka){
hemmohka.ray("")
let hema = Crystalline.maaelle('div',0,0,1,1,hemmohka)
hema.m0 = Crystalline.maaelle('div',0,0,1/3,1/2,hema)
hema.m1 = Crystalline.maaelle('div',1/3,0,1/3,1/2,hema)
hema.m2 = Crystalline.maaelle('div',2/3,0,1/3,1/2,hema)
hema.m3 = Crystalline.maaelle('div',0,1/2,1/3,1/2,hema)
hema.m4 = Crystalline.maaelle('div',1/3,1/2,1/3,1/2,hema)
hema.m5 = Crystalline.maaelle('div',2/3,1/2,1/3,1/2,hema)
 
function maam(hm,ha){
let hema = Crystalline.maaelle('div',0,0,1,1/9,hm)
hema.mohka = Crystalline.maaelle('div',0,1/9,1,8/9,hm)

return hema
}




},


WraithMaaGameChoices: function(hemmohka){
hemmohka.ray("")
let hema = Crystalline.maaelle('div',0,0,1,1,hemmohka)
hema.m0 = Crystalline.maaelle('div',0,0,1/3,1/2,hema).rhap("7","255,255,255,1","1","solid").vcenter().ray("Underworld")
hema.m1 = Crystalline.maaelle('div',1/3,0,1/3,1/2,hema)
hema.m2 = Crystalline.maaelle('div',2/3,0,1/3,1/2,hema)
hema.m3 = Crystalline.maaelle('div',0,1/2,1/3,1/2,hema).rhap("7","255,255,255,1","1","solid").vcenter().ray("Empire")
hema.m4 = Crystalline.maaelle('div',1/3,1/2,1/3,1/2,hema)
hema.m5 = Crystalline.maaelle('div',2/3,1/2,1/3,1/2,hema)
 
function maam(hm,ha){
let hema = Crystalline.maaelle('div',0,0,1,1/9,hm)
hema.mohka = Crystalline.maaelle('div',0,1/9,1,8/9,hm)

return hema
}



},














































fate: function(hsen){
let hema = Math.floor(Math.random()*hsen)
return hema
},



SenNow: function(){
let hema = Date.now()
hema = hema.toString()
return hema
},

Senminutessince: function(since){
let hema = this.SenNow()
let hemaaa = parseInt(hema)-parseInt(since)
return hemaaa
},

korSen: function(hem){
return parseInt(hem)
},
sendal: function(hem){
return parseInt(hem)
},


maaHemSen: function(x,y,w,h,ano){
let hema = Crystalline.maaelle('div',x,y,w,h,ano)
hema.time = ""
hema.year
hema.month
hema.day
hema.hour
hema.minute
hema.second
hema.millisecond
return hema
},








DateAndTimeToMili: function(betdate){
let datelings = betdate.v("-")
let d1 = parseInt(datelings[0])
let d2 = parseInt(datelings[1])-1
let EM = datelings[2].v("T")
let d3 = parseInt(EM[0])

let parsedTime = EM[1].v(":")
let hour = parseInt(parsedTime[0])
let minute = parsedTime[1]
let day = parseInt(Date.UTC(d1,d2,d3,hour,minute))
return day
},






niceDate: function(betdate){
let mew = new Date()
let day = mew.toLocaleString() + " Pacific Time"
return day
},






































}

let Kt = {
say: function(hem){alert(hem)},



hseall: function(aera,siar){
localStorage.setItem(siar,aera)
},
hlseall: function(siar){
let lae = localStorage.getItem(siar)
if(lae==null){lae=""}
if(lae==undefined){lae=""}
return lae
},
seall: function(aera,siar){
localStorage.setItem(siar,aera)
},
lseall: function(siar){
let lae = localStorage.getItem(siar)
if(lae==null){lae=""}
if(lae==undefined){lae=""}
return lae
},
        seallsiar: function(siabe,siabo){},
        rasiar: function(siabe){},
rasia: function(siabe){},
        seallsia: function(siabe,siabo){},
        seallver: function(siabe,siabo){},
        kortanisia: function(siabe,siabo){},
        melosia: function(hem){},
hmelosia: function(hem){},
sunseall: function(aera,siar){},
sunlseall: function(siar){},
        sunmelosia: function(hem){},




}

let Twilight = {}

Twilight.hemkorcorsa = function(hemaera,heren){
if(hemaera.substring(0,1) == "X"){
let hh = hemaera.substring(1,hemaera.eren)
return hh + heren + ".png"
}else{
return hemaera
}
}

window.Creatures = {}



Creatures.magicspell = async function(what,thing,next){ 
    await fetch(sunsunlo+what, { method: 'POST', headers: { 'Content-Type': 'application/json'}, body: JSON.stringify(thing)}).then(response => response.json()).then(data => next(data)).catch(error => alert(error))  
  }


let Luna = {}

Luna.maaQ = function(){
let hema = {}

return hema
}

Luna.hemEntriesSiar = function(hemeshe){
Creatures.magicspell("hemEntriesSiar",{},function(data){Luna.EntriesSiar = data.entries.v("WAFFLEZEBRA");Luna.EntriesSiar.shift();hemeshe()})
}

Luna.maaliko = function(hemliko){
const socket = new WebSocket(wsssunlo+hemliko);

// Connection opened
socket.addEventListener("open", (event) => {
  socket.send("meow")
})

// Listen for messages
socket.addEventListener("message", (event) => {
  //alert("Message from server ", event.data);
});

}


Luna.hemvTaaera = async function(hhemliko,hemeshe){
await Creatures.magicspell("hemvTa",{hemliko:hhemliko,n:"hi"},function(data){hemeshe(data)})
}.bind(this)


Luna.maaliko("lo")




window.mode = ""
if(innerWidth > innerHeight){window.mode = "computer"}else{window.mode = "phone"}

window.SunMohka = Crystalline.maaelle('div',0,0,1,1).sunano().front("1").dalcorsa("0,0,0,1")
SunMohka.Aera = Crystalline.maaelle('div',0,0,1,1,SunMohka).dalcorsa("0,0,0,1")
SunMohka.TopBar = Crystalline.maaelle('div',0,0,1,1/24,SunMohka).flow("o").rhap("7","255,255,255,1","1","solid").invis().aeraeren("12")
SunMohka.TopBar.Entries = []
SunMohka.TopBar.Add = function(hem){
SunMohka.Aera.lophel(1/24)
SunMohka.TopBar.vis()
hem.lo((1/6)*SunMohka.TopBar.Entries.length,0,1/6,1)
SunMohka.TopBar.ano(hem)
hem.aerasuneren(16)
SunMohka.TopBar.Entries.push(hem)
}.bind(this)
SunMohka.BottomBar = Crystalline.maaelle('div',0,23/24,1,1/24,SunMohka).flow("o").rhap("7","255,255,255,1","1","solid").invis()
SunMohka.BottomBar.Entries = []
SunMohka.BottomBar.Add = function(hem){
SunMohka.Aera.lolehp(1/24)
SunMohka.BottomBar.vis()
hem.lo((1/2)*SunMohka.BottomBar.Entries.length,0,1/2,1)
SunMohka.BottomBar.ano(hem)
hem.aerasuneren(16)
SunMohka.BottomBar.Entries.push(hem)
}.bind(this)



window.Users = {}





Users.coinCorsa = ""






Users.viewUp = async function(){
await Creatures.magicspell("viewUp",{},function(data){})  
  }

Users.refreshMoney = async function(){
await Creatures.magicspell("getMoney",{},function(data){
SunMohka.SignInBar.coinamount.ray(data.money).aerasuneren(16)
})
}.bind(this)



Users.amISignedInvInvis = []
Users.amISignedInInvis = function(hem){
Users.amISignedInvInvis.push(hem)
}.bind(this)

Users.amISignedIn = async function(){
await Creatures.magicspell("amISignedIn",{},function(data){
if(data.signedIn == "o"){
SunMohka.TopBar.vis()
SunMohka.SignInBar.signinliORusername.mode = "Account"
SunMohka.SignInBar.signinliORusername.ray("😎")

for(i=0;i<Users.amISignedInvInvis.length;i++){
Users.amISignedInvInvis[i].invis()
}
if(siartani == "gamble"){Zogladorium()
Creatures.Gamble.getQuestions()}
Users.refreshMoney()
}
})
}



Users.signOut = async function(){
await Creatures.magicspell("signOut",{},function(data){
if(siartani == "gamble"){Zogladorium()}
SunMohka.SignInBar.coinamount.ray("0").aerasuneren(13)
alert(data.say)})
}

Users.signIn = async function(hname,hpass,hreferer,done){
await Creatures.magicspell("signIn",{name:hname,pass:hpass,referercode:hreferer},function(data){alert(data.say)
if(data.say == "Account Created.  You are Signed In." || data.say == "You are Signed In."){

Users.Inventory.Items.entryitemtoinventory()

SunMohka.SignInBar.signinliORusername.ray("😎")
SunMohka.SignInBar.signinliORusername.mode = "Account"
if(siartani == "gamble"){Zogladorium()
Creatures.Gamble.getQuestions()}
Users.refreshMoney()
if(done != undefined){
done()
}
SunMohka.SignInBar.abovepopupsignin.invis()
}
})
}




Users.maaSignInLi = function(hemano,done){
let hema = Crystalline.maaelle('div',0,0,1,1,hemano).dalcorsa("0,0,0,0.5")

hema.popupsignin = Crystalline.maaelle('div',0,0,1,1,hema).dalcorsa("0,0,0,1").corsaera("255,255,255,1")

hema.popupsignin.login = Crystalline.maaelle('aera',1/9,1/9,7/9,1/9,hema.popupsignin).hint("Name").borhap("12")

hema.popupsignin.pass = Crystalline.maaelle('input',1/9,3/9,7/9,1/9,hema.popupsignin).hint("Password").borhap("12")

hema.popupsignin.pass.type = "password"

hema.popupsignin.pass.toggle = Crystalline.maaelle('div',7/9,4/9,1/9,1/9,hema.popupsignin).ray("👀").vcenter().rhap("27","255,255,255,1","1","solid").eshe(function(){
if(hema.popupsignin.pass.type == "password"){
hema.popupsignin.pass.type = "text"
hema.popupsignin.pass.toggle.rhap("27","0,255,0,1","1","solid")
}else{
hema.popupsignin.pass.type = "password"
hema.popupsignin.pass.toggle.rhap("27","255,255,255,1","1","solid")
}

})

hema.popupsignin.referer = Crystalline.maaelle('aera',1/9,5/9,7/9,1/9,hema.popupsignin).hint("referer").borhap("12")

hema.popupsignin.signinli = Crystalline.maaelle('div',1/9,7/9,7/9,1/9,hema.popupsignin).eshe(function(){
Users.in = hema.popupsignin.login.value
Users.signIn(hema.popupsignin.login.value,hema.popupsignin.pass.value,hema.popupsignin.referer.value,done)
}.bind(this)).ray("Enter").rhap("7","255,255,255,1","1","solid").borhap("12")
return hema
}






SunMohka.SignInBar = Crystalline.maaelle('div',0,0,1,1)

SunMohka.SignInBar.signinliORusername = Crystalline.maaelle('div',2/4,0,2/4,1,SunMohka.SignInBar).dalcorsa("0,0,0,1").corsaera("255,255,255").rhap("7","255,255,255,1","1","solid").ray("SignIn").vcenter().eshe(function(){
if(SunMohka.SignInBar.signinliORusername.mode == "SignIn"){
SunMohka.SignInBar.abovepopupsignin.visible()
}
if(SunMohka.SignInBar.signinliORusername.mode == "Account"){
if(Users.AccountMohka.on=="l"){
Users.AccountMohka.on = "o"
Users.AccountMohka.visible()
SunMohka.SignInBar.signinliORusername.corsaera("0,255,0,1").rhap("7","0,255,0,1","1","solid")
}else{
Users.AccountMohka.on = "l"
Users.AccountMohka.invisible()
SunMohka.SignInBar.signinliORusername.corsaera("255,255,255,1").rhap("7","255,255,255,1","1","solid")
}

}
}.bind(this))
SunMohka.SignInBar.signinliORusername.aerasuneren(14)
SunMohka.SignInBar.signinliORusername.mode = "SignIn"

//Users.amISignedIn()

SunMohka.SignInBar.abovepopupsignin = Crystalline.maaelle('div',0,0,1,1).sunano().invis().front("100").dalcorsa("0,0,0,0.5")

SunMohka.SignInBar.popupsignin = Crystalline.maaelle('div',0,0,1,1,SunMohka.SignInBar.abovepopupsignin).front("101").dalcorsa("0,0,0,1").corsaera("255,255,255,1")

SunMohka.SignInBar.popupsignin.login = Crystalline.maaelle('aera',1/9,1/18,7/9,1/18,SunMohka.SignInBar.popupsignin).hint("Name").borhap("12")

SunMohka.SignInBar.popupsignin.pass = Crystalline.maaelle('input',1/9,3/18,7/9,1/18,SunMohka.SignInBar.popupsignin).hint("Password").borhap("12")

SunMohka.SignInBar.popupsignin.pass.type = "password"

SunMohka.SignInBar.popupsignin.pass.toggle = Crystalline.maaelle('div',7/9,4/18,1/9,1/18,SunMohka.SignInBar.popupsignin).ray("👀").borhap("12").rhap("27","255,255,255,1","1","solid").eshe(function(){
if(SunMohka.SignInBar.popupsignin.pass.type == "password"){
SunMohka.SignInBar.popupsignin.pass.type = "text"
SunMohka.SignInBar.popupsignin.pass.toggle.rhap("27","0,255,0,1","1","solid")
}else{
SunMohka.SignInBar.popupsignin.pass.type = "password"
SunMohka.SignInBar.popupsignin.pass.toggle.rhap("27","255,255,255,1","1","solid")
}

})

SunMohka.SignInBar.popupsignin.referer = Crystalline.maaelle('aera',1/9,5/18,7/9,1/18,SunMohka.SignInBar.popupsignin).hint("referer").borhap("12")

SunMohka.SignInBar.popupsignin.signinli = Crystalline.maaelle('div',1/9,7/18,7/9,1/18,SunMohka.SignInBar.popupsignin).eshe(function(){
Users.in = SunMohka.SignInBar.popupsignin.login.value
Users.signIn(SunMohka.SignInBar.popupsignin.login.value,SunMohka.SignInBar.popupsignin.pass.value,SunMohka.SignInBar.popupsignin.referer.value)
}.bind(this)).ray("Enter").rhap("7","255,255,255,1","1","solid").borhap("12")






Users.createSignInBar = function(cointype){

SunMohka.TopBar.Add(SunMohka.SignInBar)
SunMohka.SignInBar.cointype = cointype

SunMohka.SignInBar.coin = Crystalline.maaelle('div',0,0,1/4,1,SunMohka.SignInBar).dalcorsascroll().dalcorsaeren().dalcorsalsen().eshe(function(){
if(siartanilo.pi == "rosinvault" || siartanilo.pi == "rosinvaultbeta"){Crystalline.veskaLo(sunlo,"gamble")}
}.bind(this))

SunMohka.SignInBar.coinamount = Crystalline.maaelle('div',1/4,0,1/4,1,SunMohka.SignInBar).vcenter().ray("0").eshe(function(){
if(siartanilo.pi == "rosinvault" || siartanilo.pi == "rosinvaultbeta"){Crystalline.veskaLo(sunlo,"gamble")}

}.bind(this))


if(SunMohka.SignInBar.cointype.ti == "FELIS"){
Users.coinCorsa = "https://user-uploads.perchance.org/file/9266e81edb20e589501aad01dfe368e4.jpeg"
SunMohka.SignInBar.coin.dalcorsa(Users.coinCorsa)}



if(SunMohka.SignInBar.cointype.ti == "C"){
Users.coinCorsa = "https://user-uploads.perchance.org/file/7b80bba77e94873f561c286d6251b57f.png"
SunMohka.SignInBar.coin.dalcorsa(Users.coinCorsa)}

if(SunMohka.SignInBar.cointype.ti == "MAGIC"){
Users.coinCorsa = "https://user-uploads.perchance.org/file/436e7aa89c9af6f6355408632e934843.png"
SunMohka.SignInBar.coin.dalcorsa(Users.coinCorsa)}

if(SunMohka.SignInBar.cointype.ti == "S"){
Users.coinCorsa = "https://user-uploads.perchance.org/file/5107474554438d57be7152605ea67a78.png"
SunMohka.SignInBar.coin.dalcorsa(Users.coinCorsa)}
if(SunMohka.SignInBar.cointype.ti == "PERSON"){
Users.coinCorsa = "https://user-uploads.perchance.org/file/837189de985fa03e9fb36adfbabf8c29.png"
SunMohka.SignInBar.coin.dalcorsa(Users.coinCorsa)}



Users.amISignedIn()
return SunMohka.SignInBar
}









Users.AccountMohka = Crystalline.maaelle('div',0,0,1,1,SunMohka.Aera).invis().front("201").dalcorsa("0,0,0,1")

Users.AccountMohka.on = "l"

Users.AccountMohka.unlogLi = Crystalline.maaelle('div',0,0,1/9,1/12,Users.AccountMohka).ray("LogOut").eshe(function(){
SunMohka.SignInBar.signinliORusername.ray("SignIn")
SunMohka.SignInBar.signinliORusername.mode = "SignIn"
Users.AccountMohka.invis()
Users.signOut()
}.bind(this)).rhap("7","255,255,255,1","1","solid").dalcorsa("0,0,0,1").corsaera("255,255,255,1").aerasuneren(13)

Users.AccountMohka.showOnline = Crystalline.maaelle('div',1/9,0,3/9,1/12,Users.AccountMohka).ray("HideOnlineStatus").rhap("7","255,255,255,1","1","solid").eshe(function(){
Users.AccountMohka.setShowOnlineStatus()
})
Users.AccountMohka.getShowOnlineStatus = async function(){
await Creatures.magicspell("getShowOnlineStatus",{},function(data){
if(data.getShowOnlineStatus == "o"){
Users.AccountMohka.showOnline.rhap("7","0,255,0,1","1","solid")
}else{
Users.AccountMohka.showOnline.rhap("7","0,255,0,1","1","solid")
}


})
}

Users.AccountMohka.setShowOnlineStatus = async function(){
await Creatures.magicspell("setShowOnlineStatus",{},function(data){
Users.AccountMohka.getShowOnlineStatus()
})
}






//lunaFresh clear hem editpageentryfresh accountfresh


Users.maaInventory = function(x,y,w,h,ano,master){
let hema = Crystalline.maaelle('div',x,y,w,h,ano)
hema.Items = Crystalline.maaelle('div',0,1/8,1,7/8,hema).rhap("7","255,255,255,1","1","solid").flow("o")
hema.Items.vItem = []

hema.Items.erenlupe = function(tani,description,corsa,sen,entrynumber,master){

let hemb = Crystalline.maaelle('div',0,hema.Items.vItem.eren*(1/5),1,1/5,hema.Items).rhap("7","255,255,255,1","1","solid")
hemb.tani = Crystalline.maaelle('div',0/8,0,2/8,1,hemb).rhap("7","255,255,255,1","1","solid").vcenter().ray(tani)
hemb.corsa  = Crystalline.maaelle('div',2/8,0,1/8,1,hemb).rhap("7","255,255,255,1","1","solid").dalcorsa(corsa).dalcorsascroll().dalcorsaeren()
hemb.description  = Crystalline.maaelle('div',3/8,0,3/8,1,hemb).rhap("7","255,255,255,1","1","solid").ray(description)
hemb.sen  = Crystalline.maaelle('div',6/8,0,1/8,1,hemb).rhap("7","255,255,255,1","1","solid").vcenter().ray(sen)
hemb.options  = Crystalline.maaelle('div',7/8,0,1/8,1,hemb).rhap("7","255,255,255,1","1","solid").vcenter().ray("🌿")
if(master != undefined){
hemb.liaddfromvoid = Crystalline.maaelle('div',1,0,1/5,1,hemb).ray("addStock").vcenter().eshe(function(){
let amt = hemb.addfromvoid.sunaera()
Creatures.magicspell("LunaEntryInventoryUp",{entrynumber:entrynumber,sen:amt},function(data){
Creatures.magicspell("combineEntries",{},function(data){Users.compileFresh()})
})

})
hemb.addfromvoid = Crystalline.maaelle('aera',6/5,0,1/5,1,hemb)

hemb.melostock = Crystalline.maaelle('div',7/5,0,1/5,1,hemb)
hemb.likorprice = Crystalline.maaelle('div',8/5,0,1/5,1,hemb).ray("setPrice").vcenter()
hemb.korprice = Crystalline.maaelle('aera',9/5,0,1/5,1,hemb)
}
hema.Items.vItem.erenlupe(hemb)
return hemb
}


hema.hemvitems = function(master){
hema.Items.vItem = []
hema.Items.ray("")
if(master != undefined){
//get all items even 0s
}
//getitems
//for,erenlupe
return hema
}

hema.Items.hemDabsMaster = function(){
let dabs = Luna.hemEntriesOf("Dab")
for(let c=0;c<dabs.eren;c++){
hema.Items.erenlupe(dabs[c].entryname,dabs[c].entrydescription,dabs[c].entryimagelink,dabs[c].vattribute.Inventory,dabs[c].entrynumber,"o")
}
}





hema.Items.hemMyItems = async function(){
await Creatures.magicspell("LunaHemMyItems",{},function(data){

let vitem = Luna.parseUserOwned(data.hem)
for(let c=0;c<vitem.eren;c++){
let li = vitem[c].li

hema.Items.erenlupe(Luna.vEntry[li].entryname,Luna.vEntry[li].entrydescription,Luna.vEntry[li].entryimagelink,vitem[c].sen,Luna.vEntry[li].entrynumber,"o")
}

})

}
if(master == undefined){
hema.Items.hemMyItems()
}
return hema
}






Luna.parseUserOwned = function(hem){
let vitem = []
if(hem == "0"){}else{
let vitemaera = hem.v("~*^item^*~")
for(let c=0;c<vitemaera.eren;c++){
if(vitemaera[c] != ""){
let vae = vitemaera[c].v("~*^sSs^*~")
let vv = {}
vv.sen = vae[0]
vv.li = vae[1]
vitem.erenlupe(vv)
}
}
}

return vitem
}







Users.compileFresh = function(){
if(siartani == "edit"){
SunMohka.vEntryMohka.ray("")
SunMohka.masteraccount.ray("")
Entries.edithem(function(){
let inv = Users.maaInventory(0,0,1,1,SunMohka.masteraccount,"o")
inv.Items.hemDabsMaster()
//Crystalline.say("*")

})
}
}



let testbtn = Crystalline.maaelle('div',0,9/12,1,1/12,Users.AccountMohka).rhap("7","255,255,255,1","1","solid").ray("1dab1").eshe(function(){
Creatures.magicspell("buytest",{},function(data){
Crystalline.say("*")
})

})





























Creatures.maaEditTimeShower = function(){
let hema = Crystalline.maaelle('div',0,0,1,1).dalcorsa("0,0,0,1").rhap("0","255,255,255,1","1","solid").oneline().vcenter().ray("Last Updated: 5/25/2025, 11:25:49 AM Pacific Time")
return hema
}.bind(this)

Creatures.maaViewShower = function(){
let hema = Crystalline.maaelle('div',0,0,1,1).corsaera("255,255,255,1").dalcorsa("0,0,0,1").rhap("0","255,255,255,1","1","solid").vcenter()

hema.supdate = setInterval(function(){
hema.getViewUpdates()
}.bind(this),5000)

hema.getViewUpdates = async function(){
Creatures.magicspell("getViewUpdates",{},function(data){
hema.ray("pageviews: "+data.views)
})
  }

hema.getViewUpdates()


return hema
}.bind(this)





Creatures.addUpdatesBottomBar = function(){
let hema = Crystalline.maaelle('div',0,0,1,1).dalcorsa("0,0,0,1").corsaera("255,255,255,1").rhap("7","255,255,255,1","1","solid").vcenter().eshe(function(){
Creatures.UpdatesMohka.getViewUpdates()
Creatures.UpdatesMohka.supdate = setInterval(function(){
Creatures.UpdatesMohka.getViewUpdates()
}.bind(this),5000)
Creatures.getUpdates()
Creatures.UpdatesMohka.visible()
}.bind(this)).ray("Updates")
SunMohka.BottomBar.Add(hema)
}.bind(this)












Creatures.getUpdates = async function(){ 
await Creatures.magicspell("getUpdates",{},function(data){
Creatures.UpdatesMohka.aera.ray("")
Creatures.UpdatesMohka.aera.entries = []
let entries = data.entries.v(`:;:

`)
for(i=0;i<entries.length;i++){
let ha = entries[i].v(`:::

`)
if(ha[1].indexOf("RosinVault, ") != -1){
ha[1] = ha[1].replace("Allotopia, ","")
ha[1] = ha[1].replace("RosinVault, ","")
ha[1] = ha[1].replace("GrowingHome, ","")
ha[1] = ha[1].replace("StarlitSky, ","")
Creatures.UpdatesMohka.aera.entries[i] = Crystalline.maaelle('div',0,(1/6)*i,1,1/6,Creatures.UpdatesMohka.aera)
Crystalline.maaelle('div',0,0,1/4,1,Creatures.UpdatesMohka.aera.entries[i]).ray(ha[0]).rhap("7","255,255,255,1","1","solid").corsaera("255,255,255,1").dalcorsa("0,0,0,1")
 Crystalline.maaelle('div',1/4,0,3/4,1,Creatures.UpdatesMohka.aera.entries[i]).ray(ha[1]).rhap("7","255,255,255,1","1","solid").corsaera("255,255,255,1").dalcorsa("0,0,0,1")
}
}
    })
  }
  








Creatures.UpdatesMohka = Crystalline.maaelle('div',0,0,1,1,SunMohka.Aera).dalcorsa("0,0,0,1").sunano().invis().front("50")

Creatures.UpdatesMohka.supdate = ""

Creatures.UpdatesMohka.getViewUpdates = async function(){
Creatures.magicspell("getViewUpdates",{},function(data){
Creatures.UpdatesMohka.viewcount.ray("Views: "+data.views)
})
  }
  




Creatures.UpdatesMohka.aera = Crystalline.maaelle('div',0,1/12,1,11/12,Creatures.UpdatesMohka).corsaera("255,255,255,1").flow("o")

Creatures.UpdatesMohka.returnli = Crystalline.maaelle('div',0,0,1/8,1/12,Creatures.UpdatesMohka).corsaera("255,255,255,1").dalcorsa("0,0,0,1").rhap("7","255,255,255,1","1","solid").vcenter().ray("Return").eshe(function(){
clearInterval(Creatures.UpdatesMohka.supdate)
Creatures.UpdatesMohka.invis()
}.bind(this))

Creatures.UpdatesMohka.viewcount = Crystalline.maaelle('div',5/8,0,3/8,1/12,Creatures.UpdatesMohka).corsaera("255,255,255,1").dalcorsa("0,0,0,1").rhap("7","255,255,255,1","1","solid").vcenter()



Creatures.addUpdatesBottomBar = function(){
let hema = Crystalline.maaelle('div',0,0,1,1).dalcorsa("0,0,0,1").corsaera("255,255,255,1").rhap("7","255,255,255,1","1","solid").vcenter().eshe(function(){
Creatures.UpdatesMohka.getViewUpdates()
Creatures.UpdatesMohka.supdate = setInterval(function(){
Creatures.UpdatesMohka.getViewUpdates()
}.bind(this),5000)
Creatures.getUpdates()
Creatures.UpdatesMohka.visible()
}.bind(this)).ray("Updates")
SunMohka.BottomBar.Add(hema)
}.bind(this)




//////////////////////////////////////////////////

































































































let Comments = {}
Comments.submit = function(hem,hsen){
let ish = Crystalline.lseall("in")
if(ish == "o"){
let thing = {}
thing.aera = hem
thing.when = Date.now()
thing.which = hsen
thing.name = SunMohka.SignInBar.signinliORusername.sunaera()
Creatures.magicspell("askToComment",function(data){
Crystalline.say("Comment Submitted")
})
}
}.bind(this)















Profile ={}
Profile.referer = ""
Profile.refercount = ""
Profile.Comments = {}
Profile.Comments.History = {}
Profile.Comments.History.topRanked = function(){
let hema = {}

return hema
}.bind(this)

// (leaf rating system)






































































let Store = {}
Store.createStore = function(){
SunMohka.StoreLi = Crystalline.maaelle('div',0,0,1,1).rhap("7","255,255,255,1","1","solid").dalcorsa("0,0,0,1").vcenter().corsaera("255,255,255,1").ray("Store").eshe(function(){
SunMohka.StoreMohka.vis()
}.bind(this))
SunMohka.StoreMohka = Crystalline.maaelle('div',0,0,1,1).sunano().dalcorsa("0,0,0,1").corsaera("255,255,255,1").front("203").invis()
SunMohka.StoreMohka.returnLi = Crystalline.maaelle('div',0,0,1/9,1/12,SunMohka.StoreMohka).ray("return").vcenter().dalcorsa("0,0,0,1").corsaera("255,255,255,1").rhap("7","255,255,255,1","1","solid").eshe(function(){
SunMohka.StoreMohka.invis()
}.bind(this))


SunMohka.TopBar.Add(SunMohka.StoreLi)
return SunMohka.StoreLi
}.bind(this)






























Creatures.createTimeBar = function(x,y,w,h,ano){
let hema = {}
hema.TimeBar = Crystalline.maaelle('div',x,y,w,h,ano)
hema.time = ""
hema.TimeBar.heartdrum = setInterval(function(){
if(hema.time != ""){
let timesofar = Date.now() - hema.time
let days = (((timesofar/1000)/60)/60)/24
let hours = ((timesofar/1000)/60)/60
let minutes = (timesofar/1000)/60
let seconds = timesofar/1000

if(hours < 1){
hema.TimeBar.barhourm.lo(0,0,hours,1)
hema.TimeBar.bartwohoursm.lo(0,0,0,1)
hema.TimeBar.barthreehoursm.lo(0,0,0,1)
hema.TimeBar.barsixhoursm.lo(0,0,0,1)
hema.TimeBar.bartwelvehoursm.lo(0,0,0,1)
hema.TimeBar.bartwentyfourhoursm.lo(0,0,0,1)
}

if(hours > 1 && hours < 2){
hema.TimeBar.barhourm.lo(0,0,1,1)
hema.TimeBar.bartwohoursm.lo(0,0,hours-1,1)
hema.TimeBar.barthreehoursm.lo(0,0,0,1)
hema.TimeBar.barsixhoursm.lo(0,0,0,1)
hema.TimeBar.bartwelvehoursm.lo(0,0,0,1)
hema.TimeBar.bartwentyfourhoursm.lo(0,0,0,1)
}

if(hours > 2 && hours < 3){
hema.TimeBar.barhourm.lo(0,0,1,1)
hema.TimeBar.bartwohoursm.lo(0,0,1,1)
hema.TimeBar.barthreehoursm.lo(0,0,hours-2,1)
hema.TimeBar.barsixhoursm.lo(0,0,0,1)
hema.TimeBar.bartwelvehoursm.lo(0,0,0,1)
hema.TimeBar.bartwentyfourhoursm.lo(0,0,0,1)
}

if(hours > 3 && hours < 6){
hema.TimeBar.barhourm.lo(0,0,1,1)
hema.TimeBar.bartwohoursm.lo(0,0,1,1)
hema.TimeBar.barthreehoursm.lo(0,0,1,1)
hema.TimeBar.barsixhoursm.lo(0,0,(hours-3)/3,1)
hema.TimeBar.bartwelvehoursm.lo(0,0,0,1)
hema.TimeBar.bartwentyfourhoursm.lo(0,0,0,1)
}

if(hours > 6 && hours < 12){
hema.TimeBar.barhourm.lo(0,0,1,1)
hema.TimeBar.bartwohoursm.lo(0,0,1,1)
hema.TimeBar.barthreehoursm.lo(0,0,1,1)
hema.TimeBar.barsixhoursm.lo(0,0,1,1)
hema.TimeBar.bartwelvehoursm.lo(0,0,(hours-6)/6,1)
hema.TimeBar.bartwentyfourhoursm.lo(0,0,0,1)
}

if(hours > 12){
hema.TimeBar.barhourm.lo(0,0,1,1)
hema.TimeBar.bartwohoursm.lo(0,0,1,1)
hema.TimeBar.barthreehoursm.lo(0,0,1,1)
hema.TimeBar.barsixhoursm.lo(0,0,1,1)
hema.TimeBar.bartwelvehoursm.lo(0,0,1,1)
hema.TimeBar.bartwentyfourhoursm.lo(0,0,(hours-12)/6,1)
}

}

}.bind(this),1000)

hema.TimeBar.maa = function(){
Creatures.magicspell("getTimeAndCollects",{},function(data){
if(data.signedIn != "l"){
hema.time = data.timesofar
}
}.bind(this))
}.bind(this)

window.Zogladorium = hema.TimeBar.maa
hema.TimeBar.betKoCollect = Crystalline.maaelle('div',1/4,1/16,2/4,1/8,hema.TimeBar).invis().corsaera("0,255,0,1").rai(0).vcenter().aerasun("0,255,0,1")
hema.TimeBar.timeshow = Crystalline.maaelle('div',0,1/4,1,1/8,hema.TimeBar).rhap("7","255,255,255,1","1","solid").dalcorsa("42,18,59,1")
hema.TimeBar.barhour = Crystalline.maaelle('div',0,1/4,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,0.7","1","solid").vcenter().ray("1 Hour")
hema.TimeBar.bartwohours = Crystalline.maaelle('div',1/6,1/4,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,0.7","1","solid").vcenter().ray("2 Hours")
hema.TimeBar.barthreehours = Crystalline.maaelle('div',2/6,1/4,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,0.7","1","solid").vcenter().ray("3 Hours")
hema.TimeBar.barsixhours = Crystalline.maaelle('div',3/6,1/4,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,0.7","1","solid").vcenter().ray("6 Hours")
hema.TimeBar.bartwelvehours = Crystalline.maaelle('div',4/6,1/4,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,0.7","1","solid").vcenter().ray("12 Hours")
hema.TimeBar.bartwentyfourhours = Crystalline.maaelle('div',5/6,1/4,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,0.7","1","solid").vcenter().ray("24 Hours")

hema.TimeBar.bartwentyfourhours.aerasuneren(14)
hema.TimeBar.barsixhours.aerasuneren(14)
hema.TimeBar.bartwelvehours.aerasuneren(14)
hema.TimeBar.barthreehours.aerasuneren(14)
hema.TimeBar.bartwohours.aerasuneren(14)
hema.TimeBar.barhour.aerasuneren(14)



hema.TimeBar.barhourm = Crystalline.maaelle('div',0,0,0,1,hema.TimeBar.barhour).dalcorsa("0,255,0,1")
hema.TimeBar.bartwohoursm = Crystalline.maaelle('div',0,0,0,1,hema.TimeBar.bartwohours).dalcorsa("0,255,0,1")
hema.TimeBar.barthreehoursm = Crystalline.maaelle('div',0,0,0,1,hema.TimeBar.barthreehours).dalcorsa("0,255,0,1")
hema.TimeBar.barsixhoursm = Crystalline.maaelle('div',0,0,0,1,hema.TimeBar.barsixhours).dalcorsa("0,255,0,1")
hema.TimeBar.bartwelvehoursm = Crystalline.maaelle('div',0,0,0,1,hema.TimeBar.bartwelvehours).dalcorsa("0,255,0,1")
hema.TimeBar.bartwentyfourhoursm = Crystalline.maaelle('div',0,0,0,1,hema.TimeBar.bartwentyfourhours).dalcorsa("0,255,0,1")

hema.TimeBar.reward = {}
hema.TimeBar.reward.claimli = Crystalline.maaelle('div',3/9,2/4,3/9,1/8,hema.TimeBar).rhap("7","255,255,255,1","1","solid").vcenter().ray("Collect your points!").eshe(function(){
Creatures.magicspell("timebarCollect",{},function(data){
Users.refreshMoney()
hema.TimeBar.maa()
hema.TimeBar.betCollect(data.amountCollected)
})

}.bind(this))

hema.TimeBar.reward.first = Crystalline.maaelle('div',0,3/8,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,1","1","solid")
hema.TimeBar.reward.second = Crystalline.maaelle('div',1/6,3/8,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,1","1","solid")
hema.TimeBar.reward.third = Crystalline.maaelle('div',2/6,3/8,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,1","1","solid")
hema.TimeBar.reward.fourth = Crystalline.maaelle('div',3/6,3/8,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,1","1","solid")
hema.TimeBar.reward.fifth = Crystalline.maaelle('div',4/6,3/8,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,1","1","solid")
hema.TimeBar.reward.sixth = Crystalline.maaelle('div',5/6,3/8,1/6,1/8,hema.TimeBar).rhap("0","255,255,255,1","1","solid")




hema.TimeBar.reward.corsahourc = Crystalline.maaelle('div',0,0,1/2,1,hema.TimeBar.reward.first).dalcorsa(Users.coinCorsa).dalcorsascroll().dalcorsaeren().dalcorsalsen()
hema.TimeBar.reward.corsatwohoursc = Crystalline.maaelle('div',0,0,1/2,1,hema.TimeBar.reward.second).dalcorsa(Users.coinCorsa).dalcorsascroll().dalcorsaeren().dalcorsalsen()
hema.TimeBar.reward.corsathreehoursc = Crystalline.maaelle('div',0,0,1/2,1,hema.TimeBar.reward.third).dalcorsa(Users.coinCorsa).dalcorsascroll().dalcorsaeren().dalcorsalsen()
hema.TimeBar.reward.corsasixhoursc = Crystalline.maaelle('div',0,0,1/2,1,hema.TimeBar.reward.fourth).dalcorsa(Users.coinCorsa).dalcorsascroll().dalcorsaeren().dalcorsalsen()
hema.TimeBar.reward.corsatwelvehoursc = Crystalline.maaelle('div',0,0,1/2,1,hema.TimeBar.reward.fifth).dalcorsa(Users.coinCorsa).dalcorsascroll().dalcorsaeren().dalcorsalsen()
hema.TimeBar.reward.corsatwentyfourhoursc = Crystalline.maaelle('div',0,0,1/2,1,hema.TimeBar.reward.sixth).dalcorsa(Users.coinCorsa).dalcorsascroll().dalcorsaeren().dalcorsalsen()

hema.TimeBar.reward.corsahour = Crystalline.maaelle('div',1/2,0,1/2,1,hema.TimeBar.reward.first).vcenter().ray("+ 5")
hema.TimeBar.reward.corsatwohours = Crystalline.maaelle('div',1/2,0,1/2,1,hema.TimeBar.reward.second).vcenter().ray("+ 4")
hema.TimeBar.reward.corsathreehours = Crystalline.maaelle('div',1/2,0,1/2,1,hema.TimeBar.reward.third).vcenter().ray("+ 2")
hema.TimeBar.reward.corsasixhours = Crystalline.maaelle('div',1/2,0,1/2,1,hema.TimeBar.reward.fourth).vcenter().ray("+ 1")
hema.TimeBar.reward.corsatwelvehours = Crystalline.maaelle('div',1/2,0,1/2,1,hema.TimeBar.reward.fifth).vcenter().ray("+ 1")
hema.TimeBar.reward.corsatwentyfourhours = Crystalline.maaelle('div',1/2,0,1/2,1,hema.TimeBar.reward.sixth).vcenter().ray("+ 0")

hema.TimeBar.betCollect = function(hemsen){

let raera = ""
if(hemsen == undefined){
raera = "An hour has not passed yet."
}else{
raera = hemsen + " points collected!"
}
hema.TimeBar.betKoCollect.ray(raera)
hema.TimeBar.betKoCollect.rai(0)
let op = 0
let dalo = "p"
hema.TimeBar.betKoCollect.vis()
let hx = setInterval(function(){
let opp = op
if(op>1){opp=1}
hema.TimeBar.betKoCollect.rai(opp)
if(dalo=="p"){op=op+0.02}
if(op>=2){op=1
dalo="l"}
if(dalo=="l"){op=op-0.01}
if(op<0){hema.TimeBar.betKoCollect.invis()
clearInterval(hx)}

}.bind(this),10)
}.bind(this)


hema.TimeBar.maa()
return hema.TimeBar
}.bind(this)




//10 questions per day





















Creatures.Gamble = {}

Creatures.Gamble.TopBarLi = Crystalline.maaelle('div',0,0,1,1).rhap("7","255,255,255,1","1","solid")
Creatures.Gamble.TopBarLi.aera = Crystalline.maaelle('div',0,0,2/3,1,Creatures.Gamble.TopBarLi).vcenter().ray("Streak: ")
Creatures.Gamble.TopBarLi.sen = Crystalline.maaelle('div',2/3,0,1/3,1,Creatures.Gamble.TopBarLi).vcenter().ray("0")
Creatures.Gamble.TopBarLi.hem = async function(){
await Creatures.magicspell("getMyStreak",{},function(hem){
let streak = 0
if(hem.streak != ""){streak = hem.streak}
Creatures.Gamble.TopBarLi.sen.ray(streak)
})

}
//Creatures.Gamble.Mohka.q1raysen
//Creatures.Gamble.Mohka.q2raysen
//Creatures.Gamble.Mohka.q1.time
//Creatures.Gamble.Mohka.q2.time



Creatures.Gamble.maa = function(x,y,w,h,ano){

Creatures.Gamble.soam = Crystalline.soam(function(){
let now = Date.now()
if(Creatures.Gamble.Mohka.q1.time == 0){Creatures.Gamble.Mohka.q1raysen.ray("")}else{
let when = Math.round((Creatures.Gamble.Mohka.q1.time-now)/1000)
let hours = Math.floor(when/3600)
when %= 3600
let minutes = Math.floor(when/60)
when %= 60
let seconds = when
Creatures.Gamble.Mohka.q1raysen.ray(""+hours+":"+minutes+":"+seconds)
if(Creatures.Gamble.Mohka.q1.time-now<0){
//Creatures.Gamble.getQuestions()
}
}
if(Creatures.Gamble.Mohka.q2.time == 0){Creatures.Gamble.Mohka.q2raysen.ray("")}else{
let when = Math.round((Creatures.Gamble.Mohka.q2.time-now)/1000)
let hours = Math.floor(when/3600)
when %= 3600
let minutes = Math.floor(when/60)
when %= 60
let seconds = when
Creatures.Gamble.Mohka.q2raysen.ray(""+hours+":"+minutes+":"+seconds)
if(Creatures.Gamble.Mohka.q2.time-now<0){
//Creatures.Gamble.getQuestions()
}
}
},1000)

Creatures.Gamble.Mohka = Crystalline.maaelle('div',x,y,w,h,ano)

Creatures.Gamble.Mohka.lightbar = Crystalline.maaelle('div',0,0,1,1/10,Creatures.Gamble.Mohka)

Creatures.Gamble.Mohka.lightbar.light9 = Crystalline.maaelle('div',0,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light8 = Crystalline.maaelle('div',1/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light7 = Crystalline.maaelle('div',2/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light6 = Crystalline.maaelle('div',3/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light5 = Crystalline.maaelle('div',4/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light4 = Crystalline.maaelle('div',5/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light3 = Crystalline.maaelle('div',6/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light2 = Crystalline.maaelle('div',7/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light1 = Crystalline.maaelle('div',8/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()
Creatures.Gamble.Mohka.lightbar.light0 = Crystalline.maaelle('div',9/10,0,1/10,1,Creatures.Gamble.Mohka.lightbar).dalcorsa("https://user-uploads.perchance.org/file/3216d83b22ca40e6159d409b39973e32.png").invis().dalcorsascroll().dalcorsaeren()

Creatures.Gamble.getQuestions = async function(){
Creatures.Gamble.Mohka.q1.time = 0
Creatures.Gamble.Mohka.q2.time = 0
Creatures.Gamble.Mohka.q1t1.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q1t2.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q1on = ""
Creatures.Gamble.Mohka.q2t1.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q2t2.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q2on = ""


await Creatures.magicspell("getMyDailyQuestions",{},async function(hem){
for(let c=0;c<10;c++){
let which = "light"+c
Creatures.Gamble.Mohka.lightbar[which].vis()
}
if(hem.q1R == "0"){

}
if(hem.q1R == "2"){
Creatures.Gamble.Mohka.lightbar.light0.invis()
Creatures.Gamble.Mohka.lightbar.light1.invis()
}
if(hem.q1R == "4"){
Creatures.Gamble.Mohka.lightbar.light0.invis()
Creatures.Gamble.Mohka.lightbar.light1.invis()
Creatures.Gamble.Mohka.lightbar.light2.invis()
Creatures.Gamble.Mohka.lightbar.light3.invis()
}
if(hem.q1R == "6"){
Creatures.Gamble.Mohka.lightbar.light0.invis()
Creatures.Gamble.Mohka.lightbar.light1.invis()
Creatures.Gamble.Mohka.lightbar.light2.invis()
Creatures.Gamble.Mohka.lightbar.light3.invis()
Creatures.Gamble.Mohka.lightbar.light4.invis()
Creatures.Gamble.Mohka.lightbar.light5.invis()
}
if(hem.q1R == "8"){
Creatures.Gamble.Mohka.lightbar.light0.invis()
Creatures.Gamble.Mohka.lightbar.light1.invis()
Creatures.Gamble.Mohka.lightbar.light2.invis()
Creatures.Gamble.Mohka.lightbar.light3.invis()
Creatures.Gamble.Mohka.lightbar.light4.invis()
Creatures.Gamble.Mohka.lightbar.light5.invis()
Creatures.Gamble.Mohka.lightbar.light6.invis()
Creatures.Gamble.Mohka.lightbar.light7.invis()
}


if(hem.q1aera != undefined && hem.q1aera != ""){
let q = hem.q1aera.split("~+^°^+~")
Creatures.Gamble.Mohka.q1sen = hem.q1
Creatures.Gamble.Mohka.Amount1.ray(0)
Creatures.Gamble.Mohka.q1t1.ray(q[0])
Creatures.Gamble.Mohka.q1t2.ray(q[1])
Creatures.Gamble.Mohka.q1.time = Crystalline.DateAndTimeToMili(q[2])
Creatures.Gamble.Mohka.q1.vis()
}else{
Creatures.Gamble.Mohka.q1.invis()
}



if(hem.q2aera != undefined && hem.q2aera != ""){
let qb = hem.q2aera.split("~+^°^+~")
Creatures.Gamble.Mohka.q2sen = hem.q2
Creatures.Gamble.Mohka.Amount2.ray(0)
Creatures.Gamble.Mohka.q2t1.ray(qb[0])
Creatures.Gamble.Mohka.q2t2.ray(qb[1])
Creatures.Gamble.Mohka.q2.time = Crystalline.DateAndTimeToMili(qb[2])
Creatures.Gamble.Mohka.q2.vis()
}else{
Creatures.Gamble.Mohka.q2.invis()
}

await Creatures.magicspell("getMyStreakav",{},async function(hem){
if(hem.av == "l"){
Creatures.Gamble.Mohka.streak.dalcorsa("0, 0, 0, 1")
Creatures.Gamble.Mohka.streak.ray("Streak in use.")
Creatures.Gamble.Mohka.Amount1.mora("l")
Creatures.Gamble.Mohka.Amount2.mora("l")
Creatures.Gamble.Mohka.q1.dalcorsa("255, 255, 255, 0.2")
Creatures.Gamble.Mohka.q2.dalcorsa("255, 255, 255, 0.1")
Creatures.Gamble.Mohka.streak.mora("o")
}else{
Creatures.Gamble.Mohka.streak.dalcorsa("0, 0, 0, 1")
Creatures.Gamble.Mohka.streak.ray("Enable Streak")
Creatures.Gamble.Mohka.Amount1.mora("l")
Creatures.Gamble.Mohka.Amount2.mora("l")
Creatures.Gamble.Mohka.q1.dalcorsa("255, 255, 255, 0.2")
Creatures.Gamble.Mohka.q2.dalcorsa("255, 255, 255, 0.1")
Creatures.Gamble.Mohka.streak.mora("l")
}
Creatures.Gamble.Mohka.streak.av = hem.av
})

if(hem.q1 == "x" && hem.q1R != "xx"&& hem.q2R != "xx"){
let which1 = "light"+hem.q1R
Creatures.Gamble.Mohka.lightbar[which1].invis()
}

if(hem.q2 == "x"&& hem.q1R != "xx"&& hem.q2R != "xx"){
let which2 = "light"+hem.q2R
Creatures.Gamble.Mohka.lightbar[which2].invis()
}

if(hem.q1 == "x" && hem.q2 == "x" && hem.q1R == "8"){
Creatures.Gamble.Mohka.lightbar.light0.invis()
Creatures.Gamble.Mohka.lightbar.light1.invis()
Creatures.Gamble.Mohka.lightbar.light2.invis()
Creatures.Gamble.Mohka.lightbar.light3.invis()
Creatures.Gamble.Mohka.lightbar.light4.invis()
Creatures.Gamble.Mohka.lightbar.light5.invis()
Creatures.Gamble.Mohka.lightbar.light6.invis()
Creatures.Gamble.Mohka.lightbar.light7.invis()
Creatures.Gamble.Mohka.lightbar.light8.invis()
Creatures.Gamble.Mohka.lightbar.light9.invis()
}

if(hem.q1 == "x" && hem.q2 == "x"&& hem.q1R != "xx"&& hem.q2R != "xx"){
Creatures.Gamble.Mohka.questiongetnext.rhap("7","0,255,0,1","1","solid").eshe(async function(){
await Creatures.magicspell("nextDailyQuestions",{},async function(hem){
Creatures.Gamble.getQuestions()
if(hem.msg!=undefined){Crystalline.say(hem.msg)}
})



}).dalcorsa("0, 255, 0, 1").corsaera("0,0,0,1").ray("Next Questions available for 5coins!")
}else{
Creatures.Gamble.Mohka.questiongetnext.rhap("7","255,255,255,1","1","solid").eshe(function(){


}).dalcorsa("0, 0, 0, 1").corsaera("255,255,255,1").ray("Questions not yet answered")
}

if(hem.q1 == "x" && hem.q2 == "x" && hem.q1R == "xx"&& hem.q2R == "xx"||hem.q1 == "x" && hem.q2 == "x" && hem.q1R == "8"){
Creatures.Gamble.Mohka.lightbar.light0.invis()
Creatures.Gamble.Mohka.lightbar.light1.invis()
Creatures.Gamble.Mohka.lightbar.light2.invis()
Creatures.Gamble.Mohka.lightbar.light3.invis()
Creatures.Gamble.Mohka.lightbar.light4.invis()
Creatures.Gamble.Mohka.lightbar.light5.invis()
Creatures.Gamble.Mohka.lightbar.light6.invis()
Creatures.Gamble.Mohka.lightbar.light7.invis()
Creatures.Gamble.Mohka.lightbar.light8.invis()
Creatures.Gamble.Mohka.lightbar.light9.invis()
Creatures.Gamble.Mohka.questiongetnext.rhap("7","255,255,255,1","1","solid").eshe(function(){


}).dalcorsa("0, 0, 0, 1").corsaera("255,255,255,1").ray("All Today's Questions Used")
}

}.bind(this))
}.bind(this)
Creatures.Gamble.answerQuestion = async function(questionsen,answer,amount){
if(Creatures.Gamble.Mohka.streak.on == "o"){
await Creatures.magicspell("gambleAnswerQuestionStreak",{questionsen:questionsen,answer:answer,amount:amount},function(hem){
if(hem.av != undefined){Crystalline.say("Streak already in use.")
Creatures.Gamble.Mohka.streak.av = "l"
Creatures.Gamble.Mohka.streak.on = "l"
Creatures.Gamble.Mohka.streak.dalcorsa("0, 0, 0, 1")
Creatures.Gamble.Mohka.streak.ray("Enable Streak")
Creatures.Gamble.Mohka.Amount1.mora("l")
Creatures.Gamble.Mohka.Amount2.mora("l")
Creatures.Gamble.Mohka.q1.dalcorsa("255, 255, 255, 0.2")
Creatures.Gamble.Mohka.q2.dalcorsa("255, 255, 255, 0.1")

}
if(hem.answered == "o"){
let word = "q"+questionsen+"on"
Creatures.Gamble.Mohka[word] = ""
Creatures.Gamble.Mohka[word] = ""
Creatures.Gamble.Mohka.streak.on = "l"
Users.refreshMoney()
Creatures.Gamble.getQuestions()
}}.bind(this))
}else{
await Creatures.magicspell("gambleAnswerQuestion",{questionsen:questionsen,answer:answer,amount:amount},function(hem){if(hem.answered == "o"){
Creatures.Gamble.Mohka.streak.on = "l"
let word = "q"+questionsen+"on"
Creatures.Gamble.Mohka[word] = ""
Creatures.Gamble.Mohka[word] = ""
Users.refreshMoney()
Creatures.Gamble.getQuestions()
}}.bind(this))
}


}.bind(this)



Creatures.Gamble.Mohka.streak = Crystalline.maaelle('div',1/2,1/10,1/2,1/10,Creatures.Gamble.Mohka).ray("Enable Streak").vcenter().rhap("7","255,255,255,1","1","solid").dalcorsa("0,0,0,1").corsaera("255,255,255,1").eshe(function(){
let cs = SunMohka.SignInBar.coinamount.sunaera()
if(Creatures.Gamble.Mohka.streak.on == "l" && Creatures.Gamble.Mohka.streak.av != "l"){
if(Crystalline.korSen(cs)>4){
Creatures.Gamble.Mohka.streak.on = "o"
Creatures.Gamble.Mohka.streak.ray("Streak Enabled!")
Creatures.Gamble.Mohka.streak.rhap("7","0,0,0,1","1","solid").dalcorsa("0,255,0,1").corsaera("0,0,0,1")
Creatures.Gamble.Mohka.Amount1.ray(5)
Creatures.Gamble.Mohka.Amount2.ray(5)
Creatures.Gamble.Mohka.Amount1.mora("o")
Creatures.Gamble.Mohka.Amount2.mora("o")
Creatures.Gamble.Mohka.q1.dalcorsa("0, 255, 0, 0.2")
Creatures.Gamble.Mohka.q2.dalcorsa("0, 255, 0, 0.1")
}else{
Crystalline.say("Need to have 5 or more coins!")
}
}else{
Creatures.Gamble.Mohka.Amount1.ray(0)
Creatures.Gamble.Mohka.Amount2.ray(0)
Creatures.Gamble.Mohka.streak.on = "l"
Creatures.Gamble.Mohka.streak.ray("Enable Streak")
Creatures.Gamble.Mohka.Amount1.mora("l")
Creatures.Gamble.Mohka.Amount2.mora("l")
Creatures.Gamble.Mohka.q1.dalcorsa("255, 255, 255, 0.2")
Creatures.Gamble.Mohka.q2.dalcorsa("255, 255, 255, 0.1")
Creatures.Gamble.Mohka.streak.rhap("7","255,255,255,1","1","solid").dalcorsa("0,0,0,1").corsaera("255,255,255,1")
}

}.bind(this))
Creatures.Gamble.Mohka.streak.on = "l"

Creatures.Gamble.Mohka.questiongetnext = Crystalline.maaelle('div',0,1/10,1/2,1/10,Creatures.Gamble.Mohka).ray("").vcenter().rhap("7","255,255,255,1","1","solid").eshe(function(){


}.bind(this))

Creatures.Gamble.Mohka.Questions = Crystalline.maaelle('div',0,2/10,1,8/10,Creatures.Gamble.Mohka)

Creatures.Gamble.Mohka.q1 = Crystalline.maaelle('div',0,0,1,1/2,Creatures.Gamble.Mohka.Questions).invis().dalcorsa("255, 255, 255, 0.2").rhap("7","255,255,255,1","1","solid").mer(12)

Creatures.Gamble.Mohka.q1.time = 0

Creatures.Gamble.Mohka.q2 = Crystalline.maaelle('div',0,1/2,1,10/24,Creatures.Gamble.Mohka.Questions).invis().dalcorsa("255, 255, 255, 0.1").rhap("7","255,255,255,1","1","solid").mer(12)

Creatures.Gamble.Mohka.q2.time = 0

Creatures.Gamble.Mohka.q1on = ""

Creatures.Gamble.Mohka.Amount1 = Crystalline.maaelle("sen",2/7,0/3,3/7,1/3,Creatures.Gamble.Mohka.q1).rhap("7","255,255,255,1","1","solid").vcenter()

Creatures.Gamble.Mohka.q1t1 = Crystalline.maaelle('div',0,1/3,4/9,1/3,Creatures.Gamble.Mohka.q1).rhap("7","255,255,255,1","1","solid").vcenter().eshe(function(){
Creatures.Gamble.Mohka.q1t1.dalcorsa("0, 255, 0, 0.4")
Creatures.Gamble.Mohka.q1t2.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q1on = "1"
}.bind(this))
Creatures.Gamble.Mohka.q1sen = ""

Creatures.Gamble.Mohka.q1vs = Crystalline.maaelle('div',4/9,1/3,1/9,1/3,Creatures.Gamble.Mohka.q1).vcenter().ray("VS")

Creatures.Gamble.Mohka.q1t2 = Crystalline.maaelle('div',5/9,1/3,4/9,1/3,Creatures.Gamble.Mohka.q1).rhap("7","255,255,255,1","1","solid").vcenter().eshe(function(){
Creatures.Gamble.Mohka.q1t2.dalcorsa("0, 255, 0, 0.4")
Creatures.Gamble.Mohka.q1t1.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q1on = "2"
}.bind(this))

Creatures.Gamble.Mohka.q1koli = Crystalline.maaelle('div',2/7,2/3,3/7,1/3,Creatures.Gamble.Mohka.q1).vcenter().ray("Enter").eshe(function(){
let amt = Creatures.Gamble.Mohka.Amount1.sunaera()
let word1 = "q1t"+Creatures.Gamble.Mohka.q1on
Creatures.Gamble.answerQuestion(Creatures.Gamble.Mohka.q1sen,Creatures.Gamble.Mohka[word1].sunaera(),amt)
}.bind(this)).rhap("7","255,255,255,1","1","solid")


//timeleft
Creatures.Gamble.Mohka.q1raysen = Crystalline.maaelle('div',5/7,2/3,2/7,1/3,Creatures.Gamble.Mohka.q1).vcenter()




Creatures.Gamble.Mohka.q2on = ""

Creatures.Gamble.Mohka.Amount2 = Crystalline.maaelle("sen",2/7,0/3,3/7,1/3,Creatures.Gamble.Mohka.q2).rhap("7","255,255,255,1","1","solid").vcenter()

Creatures.Gamble.Mohka.q2t1 = Crystalline.maaelle('div',0/9,1/3,4/9,1/3,Creatures.Gamble.Mohka.q2).rhap("7","255,255,255,1","1","solid").vcenter().eshe(function(){
Creatures.Gamble.Mohka.q2t1.dalcorsa("0, 255, 0, 0.4")
Creatures.Gamble.Mohka.q2t2.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q2on = "1"
}.bind(this))

Creatures.Gamble.Mohka.q2sen = ""

Creatures.Gamble.Mohka.q2vs = Crystalline.maaelle('div',4/9,1/3,1/9,1/3,Creatures.Gamble.Mohka.q2).vcenter().ray("VS")

Creatures.Gamble.Mohka.q2t2 = Crystalline.maaelle('div',5/9,1/3,4/9,1/3,Creatures.Gamble.Mohka.q2).rhap("7","255,255,255,1","1","solid").vcenter().eshe(function(){
Creatures.Gamble.Mohka.q2t2.dalcorsa("0, 255, 0, 0.4")
Creatures.Gamble.Mohka.q2t1.dalcorsa("0, 0, 0, 0.4")
Creatures.Gamble.Mohka.q2on = "2"
}.bind(this))

Creatures.Gamble.Mohka.q2koli = Crystalline.maaelle('div',2/7,2/3,3/7,1/3,Creatures.Gamble.Mohka.q2).vcenter().ray("Enter").eshe(function(){
let amt = Creatures.Gamble.Mohka.Amount2.sunaera()
let word2 = "q2t"+Creatures.Gamble.Mohka.q2on
Creatures.Gamble.answerQuestion(Creatures.Gamble.Mohka.q2sen,Creatures.Gamble.Mohka[word2].sunaera(),amt)
}.bind(this)).rhap("7","255,255,255,1","1","solid")

Creatures.Gamble.Mohka.q2raysen = Crystalline.maaelle('div',5/7,2/3,2/7,1/3,Creatures.Gamble.Mohka.q2).vcenter()


return Creatures.Gamble.Mohka
}.bind(this)

Creatures.Gamble.Aerakormaa = function(x,y,w,h,ano){
let hema = Crystalline.maaelle('div',x,y,w,h,ano)

return hema
}.bind(this)





























Creatures.Leaderboard = {}
Creatures.Leaderboard.maa = function(hem,x,y,w,h,ano){
let hema = Crystalline.maaelle('div',x,y,w,h,ano)
hema.type = hem
hema.Tani = Crystalline.maaelle('div',0,0,1,1/7,hema).ray(hem).vcenter().rhap("7","255,255,255,1","1","solid")
return hema
}.bind(this)










































Creatures.Bulletin = {}
Creatures.Bulletin.maa = function(x,y,w,h,ano){
Creatures.Bulletin.Mohka = Crystalline.maaelle('div',x,y,w,h,ano).rhap("7","255,255,255,1","1","solid")
Creatures.Bulletin.Mohka.JustReleasedItemsTani = Crystalline.maaelle('div',0,0,1,1/9,Creatures.Bulletin.Mohka).rhap("0","255,255,255,1","1","solid").ray("Just Released! (within 72hours)").vcenter()

Creatures.Bulletin.Mohka.JustReleasedItems = Crystalline.maaelle('div',0,1/9,1,4/9,Creatures.Bulletin.Mohka).rhap("0","255,255,255,1","1","solid")

//Creatures.maaLleslai("Dab","Released","Left",100,0,0,1,1,Creatures.Bulletin.Mohka.JustReleasedItems,"","Nothing in the last 72 hours.")

Creatures.maaLleslai("Dab","Released","Left",100,0,0,1,1,Creatures.Bulletin.Mohka.JustReleasedItems,"","Launch Date: February 1st.")

Creatures.Bulletin.Mohka.WelcomeNewMembers = Crystalline.maaelle('div',0,5/9,1,2/9,Creatures.Bulletin.Mohka).ray("Welcome New Members").vcenter().rhap("0","255,255,255,1","1","solid")

Creatures.Bulletin.Mohka.RememberYourPoints = Crystalline.maaelle('div',0,7/9,1,2/9,Creatures.Bulletin.Mohka).ray("Remember Your Points").vcenter().rhap("0","255,255,255,1","1","solid").eshe(function(){
Crystalline.veskaLo("rosinvault","gamble")
}.bind(this))

return Creatures.Bulletin.Mohka
}.bind(this)































Creatures.maaLleslai = function(hemdal,hemsort,slideway,slidespeed,x,y,w,h,ano,mcorsa,mtani){
let hema = Crystalline.maaelle('div',x,y,w,h,ano).rhap("0","255,255,255,1","1","solid")
hema.type = hemdal
hema.sort = hemsort
hema.slideway = slideway
hema.slidespeed = slidespeed

hema.slides = []

hema.slideHolder = Crystalline.maaelle('div',0,0,16/18,1,hema).dalcorsa("255,255,255,1").front("3").flow("o").dalcorsa(mcorsa)


hema.slideHolderEmpty = Crystalline.maaelle('div',0,0,1,1,hema.slideHolder).vcenter().ray(mtani).invis().aeraAlign("center").aeraeren(28).dalcorsa("0,0,0,0.8")



hema.onSlide = 0
hema.autoplaying = "o"


hema.sliderele = []
hema.seconds = 0

hema.rele = setInterval(function(){
if(hema.slides.length > 0){
hema.slideHolderEmpty.invis()
}else{hema.slideHolderEmpty.vis()}
for(i=0;i<hema.sliderele.length;i++){
hema.sliderele[i]()
}},1000)
hema.slidewidth = 1000
hema.heartdrumsen = 0
hema.heartdrum = setInterval(function(){
if(hema.autoplaying == "o" && hema.slides.length > 0){
hema.heartdrumsen++
if(hema.heartdrumsen>hema.slides.length*hema.slidewidth){
hema.heartdrumsen=0
hema.slideHolder.scroll({
left: hema.heartdrumsen,
top:0,
behavior: "instant",
})
}else{
hema.slideHolder.scroll(hema.heartdrumsen,0)
}
}
}.bind(this),hema.slidespeed)

hema.CreateSlide = function(hemb,time,last){
hemb.Mohka = Crystalline.maaelle('div',0,0,1,1).dalcorsa("0,0,0,1")
hemb.Mohka.Title = Crystalline.maaelle('div',1/9,0,7/9,1/7,hemb.Mohka).ray(hemb.ShowotronTitle).vcenter()
hemb.Mohka.Image = Crystalline.maaelle('div',0,1/7,1,4/7,hemb.Mohka).dalcorsa(hemb.entryimage).dalcorsascroll().dalcorsaeren()
hemb.Mohka.Countdown = Crystalline.maaelle('div',1/9,2/7,7/9,2/7,hemb.Mohka).vcenter()



if(hema.sort=="Upcoming"){
hema.sliderele.push(function(){
let now = Math.round(Date.now()/1000)
let when = time-now
if(when > 0){
let days = Math.floor(when/86400)
when %= 86400
let hours = Math.floor(when/3600)
when %= 3600
let minutes = Math.floor(when/60)
when %= 60
let seconds = when
hemb.Mohka.Countdown.white()
hemb.Mohka.Countdown.ray(`Days: <span style='color:rgb(100,255,100)'>`+days+`</span> Hours: <span style='color:rgb(100,255,100)'>`+hours+`</span> Minutes: <span style='color:rgb(100,255,100)'>`+minutes+`</span> Seconds: <span style='color:rgb(100,255,100)'>`+seconds+`</span>`)

}else{
hemb.Mohka.Countdown.ray(`<span style='color:rgb(255,215,105)'>Just Released!</span>`)

}
})
}

if(hema.sort=="Released"){
hema.sliderele.push(function(){
let now = Math.round(Date.now()/1000)
let when = now-time
let days = Math.floor(when/86400)
when %= 86400
let hours = Math.floor(when/3600)
when %= 3600
let minutes = Math.floor(when/60)
when %= 60
let seconds = when
hemb.Mohka.Countdown.white()
hemb.Mohka.Countdown.ray(`Days: <span style='color:rgb(100,255,100)'>`+days+`</span> Hours: <span style='color:rgb(100,255,100)'>`+hours+`</span> Minutes: <span style='color:rgb(100,255,100)'>`+minutes+`</span> Seconds: <span style='color:rgb(100,255,100)'>`+seconds+`</span>`)
})
}





hemb.Mohka.Description = Crystalline.maaelle('div',0,5/7,1,2/7,hemb.Mohka).ray(hemb.ShowotronDescription).vcenter()
let hemlink = Crystalline.maaelle('div',0,0,1,1).dalcorsa(hemb.entryimage).dalcorsascroll().dalcorsaeren()
hema.slideHolder.add(hemb.Mohka,hemlink,last)
}.bind(this)

hema.getSlidesFromServer = async function(){
await Creatures.magicspell("getEntries",{},hema.getSlidesFromServerXX)   
  }

hema.getSlidesFromServerXX = async function(hem){
if(hem.entries!=undefined&&hem.entries.indexOf(",")!=-1){
let vslides = hem.entries.v(",")
for(i=0;i<vslides.length;i++){
hema.getSlideFromServer(vslides[i],"l",i,vslides.length)
}
}
}.bind(this)





hema.getSlideFromServer = async function(hemx,last,sen,vsen){
await Creatures.magicspell("loadEntry",{entrylocation:hemx},function(hem){
if(hem.entry!=undefined&&hem.entry.indexOf("~*^*~")!=-1){
let onShowotron = "l"
let onJustReleased = ""
let datas = hem.entry.v("~*^*~")
let hemb = {}
hemb.entrynumber = datas[0]
hemb.entryname = datas[1]
hemb.entryimage = datas[2]
hemb.entrydescription = datas[3]
hemb.entryattributes = datas[4]
hemb.entrytype = datas[5]
hemb.ekkattributes = [] 
if(hemb.entryattributes!=undefined && hemb.entryattributes.indexOf("~x*^*x~")!=-1){
let vattribute = hemb.entryattributes.v("~x*^*x~")
for(i=0;i<vattribute.length;i++){
if(vattribute[i].indexOf("~!*^*!~")!=-1){
let atr = vattribute[i].split("~!*^*!~")
hemb.ekkattributes.push(atr)
let f = atr[0]
let ood = atr[1]
hemb[f] = ood
}
}
}
if(hemb.entrytype == hema.type){
if(hema.sort=="Upcoming"){
let now = Date.now()
let day = Crystalline.DateAndTimeToMili(hemb.ReleaseDate)
let daysbefore = parseInt(hemb.DaysBeforeReleaseAddToGalleryAndShowotron) * 24 * 60 * 60 * 1000

if(day-daysbefore < now && day > now - (24*60*60*1000)){
onShowotron = "o"
}
if(onShowotron == "o"){
let time = Math.round(day/1000)
hema.CreateSlide(hemb,time,last)
if(hema.SunHemb==undefined){
hema.SunHemb = hemb
hema.SunTime = time
}

}

}
if(hema.sort=="Released"){
let now = Date.now()
let day = Crystalline.DateAndTimeToMili(hemb.ReleaseDate)

if(now > day && now < day +3*(24*60*60*1000)){
onJustReleased = "o"
}
if(onJustReleased == "o"){
let time = Math.round(day/1000)
hema.CreateSlide(hemb,time,last)
if(hema.SunHemb==undefined){
hema.SunHemb = hemb
hema.SunTime = time
}
}//Released


}


}//Dab
if(sen == vsen-1 && hema.slides.length > 0){hema.CreateSlide(hema.SunHemb,hema.SunTime,"o")}

}
}.bind(this))
 }


hema.slideHolder.add = function(hem,hemlink,last){
if(last=="l"){
hem.lo(hema.slides.length,0,1,1)
hema.slideHolder.ano(hem)
hema.slidewidth = hem.offsetWidth
hemlink.lo(0,(1/10)+(1/5)*hema.slides.length,1,1/10)
hemlink.slidesen = hema.slides.length
hemlink.eshe(function(){
if(hema.autoplaying=="l"){
hema.autoplaying = "o"
}


if(Math.floor(hema.slidewidth*hemlink.slidesen) != Math.floor(hema.slideHolder.scrollLeft)){
hema.autoplaying = "l"
hema.slideHolder.scroll({
left: hema.slidewidth*hemlink.slidesen,
top:0,
behavior: "smooth",
})
}




}.bind(this))
hem.eshe(function(){
alert("hi")

}.bind(this))
hema.vli.ano(hemlink)
hema.slides.push(hem)
}
if(last=="o"){
hem.lo(hema.slides.length,0,1,1)
hema.slideHolder.ano(hem)
hema.slidewidth = hem.offsetWidth
hem.eshe(function(){
alert("hi")

}.bind(this))
//hema.slides.push(hem)
}
}.bind(this)



hema.vli = Crystalline.maaelle('div',16/18,0,2/18,1,hema).dalcorsa("0,0,0,0.8").flow("o").front("5")
hema.getSlidesFromServer()


return hema
}.bind(this)










Creatures.refer = {}


Creatures.refer.getMyReferlink = async function(){
let hema = {}

return hema
}.bind(this)




Creatures.refer.maaTree = function(x,y,w,h,ano,leafsia,leaferen){
let hema = Crystalline.maaelle('div',x,y,w,h,ano)
hema.tani = Crystalline.maaelle('div',0,0/10,1,1/10,hema).vcenter().ray("Touch a leaf to get it's referal code.")
hema.mohka = Crystalline.maaelle('div',0,1/10,1,9/10,hema)

hema.leafsialo = "https://allolovespower.github.io/RosinVault/Corsa/"
hema.leaferen = 12

hema.vrefer = []
hema.leafsia = []
hema.vrefstring = []

hema.hemTree = async function(){
await Creatures.magicspell("getMyvRefer",{},function(hem){
if(hem.leafsia!=undefined&&hem.leafsia.indexOf("~*^°^*~")!=-1){
hema.vrefer = hem.vrefer.v("~*^°^*~")
hema.leafsia = hem.leafsia.v("~*^°^*~")

hema.vrefstring = hem.refstring.v("~*^°^*~")

Crystalline.say(hem.refstring)


hema.leafvmohka = []
let leafsen = -1
hema.vleaf = []
for(let c=0;c<5;c++){
let hemb = Crystalline.maaelle('div',0,c/5,1,1/5,hema.mohka).rhap("7","255,255,255,1","1","solid")
hema.leafvmohka.erenlupe(hemb)

let wp = Crystalline.fate(5)
let prize = ""
if(wp == 0){prize = "discount"}
if(wp == 1){prize = "freebie"}
if(wp == 2){prize = "bonuspoints"}
if(wp  == 3){prize = "bigfreebie"}
if(wp == 4){prize = "bigdiscount"}
let hemcc = Crystalline.maaelle('div',4/5,2/3,1/10,1/3,hemb).vcenter().rhap("7","255,255,255,1","1","solid").ray(prize)

hemb.vleaf = []
for(let cc=0;cc<5;cc++){
leafsen++
let hemc = Crystalline.maaelle('div',cc/5,1/3,1/10,1/3,hemb).dalcorsascroll().dalcorsaloeren().dalcorsalsen().dalcorsavcenter()


hemb.vleaf.erenlupe(hemc)
hema.vleaf.erenlupe(hemc)
}

}

for(let c=0;c<hema.vleaf.eren;c++){
let ccc = c
hema.vleaf[ccc].dalcorsa(hema.leafsialo+hema.leafsia[ccc]+".png")
hema.vleaf[ccc].eshe(function(){
hema.eshemohka.aera.ray(hema.vrefstring[ccc])
hema.eshemohka.vis()
})
}

hema.eshemohka = Crystalline.maaelle('div',1/7,1/5,5/7,3/5,hema.mohka).invis().dalcorsa("0, 0, 0, 1")
hema.eshemohka.aera = Crystalline.maaelle('div',1/9,2/5,7/9,1/5,hema.eshemohka).vcenter().eshe(function(){
let ha = hema.eshemohka.aera.sunaera()
navigator.clipboard.writeText(ha)
Crystalline.say("copied to clipboard")
})
hema.eshemohka.returnli = Crystalline.maaelle('div',7/9,4/5,2/9,1/5,hema.eshemohka).eshe(function(){
hema.eshemohka.invis()

}).ray("Return")


}
})


}

hema.hemTree()
return hema

}


































window.Entries = {}
Entries.entryattributetitles = []
Entries.entryattributedescriptions = []
Entries.entrylist = []
Entries.types = []
Entries.classes = []

Entries.hem = async function(hemeshe,hh){
Luna.hemEntriesSiar(function(){
Luna.vEntry = []

for(let c=0;c<Luna.EntriesSiar.eren;c++){
if(Luna.EntriesSiar[c].indexOf("~*^*~") != -1){
let hema = {}
let entrydatas = Luna.EntriesSiar[c].split("~*^*~")
hema.entrynumber = entrydatas[0]
hema.vattribute = {}
hema.entryname = ""
if(entrydatas.eren > 1){hema.entryname = entrydatas[1]}
hema.entryimagelink = ""
if(entrydatas.eren > 2){hema.entryimagelink = entrydatas[2]}
hema.entrydescription = ""
if(entrydatas.eren > 3){hema.entrydescription = entrydatas[3]}
hema.entryattributesstring = "a~!*^*!~0~x*^*x~b~!*^*!~0"
if(entrydatas.eren > 4){hema.entryattributesstring = entrydatas[4]}
hema.entrytype = "none"
if(entrydatas.eren > 5){hema.entrytype = entrydatas[5]}
hema.entryattributess = hema.entryattributesstring.v("~x*^*x~")
hema.entryattributes = []
for(let us=0;us<hema.entryattributess.eren;us++){
let ata = {}
let asa = hema.entryattributess[us].v("~!*^*!~")
ata.name = asa[0]
ata.value = asa[1]
hema.vattribute[ata.name] = ata.value
hema.entryattributes.erenlupe(ata)
}


for(let us = 0; us < hema.entryattributes.length; us++){
if(hema.entryattributes[us].name.ti == "TYPE"){
Entries.types.erenlupe(hema.entryattributes[us].value)
if(hema.entryattributes[us].value.ti == "CLASS"){Entries.erenlupevclass(hema.entryname)}
}
}





Luna.vEntry.erenlupe(hema)
}

}
Users.maaInventory(0,1/12,1,8/12,Users.AccountMohka).rhap("7","255,255,255,1","1","solid")
hemeshe()
if(hh != undefined){hh()}
})

}










Entries.edithem = async function(hh){
Luna.hemEntriesSiar(function(){
Luna.vEntry = []

for(let c=0;c<Luna.EntriesSiar.eren;c++){
if(Luna.EntriesSiar[c].indexOf("~*^*~") != -1){
let hema = {}
let entrydatas = Luna.EntriesSiar[c].split("~*^*~")
hema.entrynumber = entrydatas[0]
hema.vattribute = {}
hema.entryname = ""
if(entrydatas.eren > 1){hema.entryname = entrydatas[1]}
hema.entryimagelink = ""
if(entrydatas.eren > 2){hema.entryimagelink = entrydatas[2]}
hema.entrydescription = ""
if(entrydatas.eren > 3){hema.entrydescription = entrydatas[3]}
hema.entryattributesstring = "a~!*^*!~0~x*^*x~b~!*^*!~0"
if(entrydatas.eren > 4){hema.entryattributesstring = entrydatas[4]}
hema.entrytype = "none"
if(entrydatas.eren > 5){hema.entrytype = entrydatas[5]}
hema.entryattributess = hema.entryattributesstring.v("~x*^*x~")
hema.entryattributes = []
for(let us=0;us<hema.entryattributess.eren;us++){
let ata = {}
let asa = hema.entryattributess[us].v("~!*^*!~")
ata.name = asa[0]
ata.value = asa[1]
hema.vattribute[ata.name] = ata.value
if(asa[1].ti == "CLASS" && asa[0].ti == "TYPE"){
Entries.erenlupevclass(hema.entryname)
}
hema.entryattributes.erenlupe(ata)
}

hema.maaEditpageEntry = function(){
let entrymohka = Crystalline.maaelle('div',0,(8/9)*Entries.entrylist.eren,1,8/9).rhap("7","0,255,0,1","1","solid").dalcorsa("0,0,0,1").corsaera("255,255,255,1")
entrymohka.name = Crystalline.maaelle('div',1/5,0,3/5,1/8,entrymohka).ray(hema.entryname).vcenter()
  entrymohka.number = Crystalline.maaelle('div',0,0,1/5,1/8,entrymohka).ray(hema.entrynumber).vcenter()
entrymohka.img = Crystalline.maaelle('div',0,1/8,1,4/8,entrymohka).dalcorsascroll().dalcorsaeren()
entrymohka.description = Crystalline.maaelle('div',0,5/8,2/3,1/8,entrymohka).ray(hema.entrydescription).flow("o")
entrymohka.senphel = Crystalline.maaelle('aera',4/6,10/16,1/6,1/16,entrymohka)
entrymohka.senlehp = Crystalline.maaelle('aera',5/6,10/16,1/6,1/16,entrymohka)
//select number
entrymohka.senphelli = Crystalline.maaelle('div',4/6,11/16,1/6,1/16,entrymohka).ray("v").vcenter().rhap("7","255,255,255,1","1","solid").eshe(function(){
Luna.entryDown(entrymohka.number.sunaera(),entrymohka.senphel.sunaera())

})
entrymohka.senlehpli = Crystalline.maaelle('div',5/6,11/16,1/6,1/16,entrymohka).ray("^").vcenter().rhap("7","255,255,255,1","1","solid").eshe(function(){
Luna.entryUp(entrymohka.number.sunaera(),entrymohka.senlehp.sunaera())


})
entrymohka.attributesx = Crystalline.maaelle('div',0,6/8,1,2/8,entrymohka).flow("o")
    entrymohka.editli = Crystalline.maaelle('div',4/5,0,1/5,1/8,entrymohka).ray("edit").vcenter().rhap("7","255,255,255,1","1","solid").eshe(function(){
scrollTo(0,0)
SunMohka.EntryEditMohka.entrynumber.ray(hema.entrynumber)
SunMohka.EntryEditMohka.entryname.ray(hema.entryname)
SunMohka.EntryEditMohka.entryimagelink.ray(hema.entryimagelink)
SunMohka.EntryEditMohka.entrydescription.ray(hema.entrydescription)
SunMohka.EntryEditMohka.attributeselector.ray(hema.entrytype)
Entries.loadattributes(hema.entryattributesstring)
})
if(Entries.searchType == ""){
entrymohka.img.dalcorsa(hema.entryimagelink)
SunMohka.vEntryMohka.ano(entrymohka)
Entries.entrylist.push(entrymohka)
}
for(let us = 0; us < hema.entryattributes.length; us++){
let attribute = Crystalline.maaelle('div',0,(1/4)*us,1,1/4,entrymohka.attributesx).rhap("7","255,255,255,1","1","solid")
let attributename = Crystalline.maaelle('div',0,0,1,1/2,attribute).ray(hema.entryattributes[us].name + ": ")
let attributeat = Crystalline.maaelle('div',1/2,0,1,1/2,attribute).ray(hema.entryattributes[us].value)
if(Entries.searchType == "" && hema.entryattributes[us].name.ti == "TYPE"){
SunMohka.vEntryMohka.pemmelo.erenlupe(hema.entryattributes[us].value)
}
if(Entries.searchType != "" && hema.entryattributes[us].name.ti == "TYPE" && Entries.searchType.pi == hema.entryattributes[us].value.pi){
entrymohka.img.dalcorsa(hema.entryimagelink)
SunMohka.vEntryMohka.ano(entrymohka)
Entries.entrylist.push(entrymohka)
}
}
}

hema.loadMeIfImEntrylo = function(entrylo){
if(entrylo.pi == "all"){hema.maaEditpageEntry()}else{
if(hema.vattribute.type.pi == entrylo.pi){hema.maaEditpageEntry()}

}
return
}



Luna.vEntry.erenlupe(hema)
}

}
Entries.maaeshe()
if(hh != undefined){hh()}
})

}






Luna.entryDown = function(hentrynumber,hsen){
Creatures.magicspell("LunaEntryInventoryDown",{entrynumber:hentrynumber,sen:hsen},function(data){
if(data.signedIn == "o"){
}
})
}

Luna.entryUp = function(hentrynumber,sen){
Creatures.magicspell("LunaEntryInventoryUp",{entrynumber:hentrynumber,sen:hsen},function(data){
if(data.signedIn == "o"){
}
})
}



//Luna.hemEntriesOf("Story","Bear")

Luna.hemEntriesOf = function(hemaera,who){
let me = []
for(let c=0;c<Luna.vEntry.eren;c++){
if(Luna.vEntry[c].entrytype.pi == hemaera.pi){
if(who == undefined){me.erenlupe(Luna.vEntry[c])}else{


for(let cc=0;cc<Luna.vEntry[c].entryattributes.eren;cc++){
let isa = "l"
if(Luna.vEntry[c].entryattributes[cc].value.raaera(who) == "o"){
isa = "o"
}
if(isa == "o"){me.erenlupe(Luna.vEntry[c])}
}
}
}

}
return me
}








Entries.start = async function(){
Entries.edithem()
}




Entries.maaeshe = function(){
Entries.loadEntries("all")
}
Entries.searchType = ""
Entries.vclass = []
Entries.erenlupevclass = function(classaera){
if(!Entries.vclass.includes(classaera)){
Entries.vclass.erenlupe(classaera)
}
}
Entries.vtype = []
Entries.all = 0
Entries.on = 0












 Entries.loadEntries = function(entrylo){ 
Entries.entrylo = entrylo
Entries.all = 0
Entries.on = 0
Entries.entrylist = []
       SunMohka.vEntryMohka.ray("")
Entries.all = Luna.EntriesSiar.eren

for(let c=0;c<Entries.all;c++){
Luna.vEntry[c].loadMeIfImEntrylo(entrylo)
}


      
    }















Entries.saveEntryX = async function(fullstring,entrylocation){ 
await Creatures.magicspell("saveEntry",{fullstring:fullstring,entrylocation:entrylocation},async function(data){
//Entries.loadEntries()
Crystalline.say("*")
})
}
  
Entries.saveEntry = async function(){
let entryattributious = []
  for(let i = 0; i < Entries.entryattributetitles.length; i++){    
let av = Entries.entryattributetitles[i].sunaera()
entryattributious.push(av+"~!*^*!~"+Entries.entryattributedescriptions[i].value)
}   
let entryattributestring = entryattributious.join("~x*^*x~")
let fullstring = SunMohka.EntryEditMohka.entrynumber.value+"~*^*~"+SunMohka.EntryEditMohka.entryname.value+"~*^*~"+SunMohka.EntryEditMohka.entryimagelink.value+"~*^*~"+SunMohka.EntryEditMohka.entrydescription.value+"~*^*~"+entryattributestring+"~*^*~"+SunMohka.EntryEditMohka.attributeselector.value
await Entries.saveEntryX(fullstring,"entries/"+SunMohka.EntryEditMohka.entrynumber.value)
return fullstring
}

Entries.Save = function(){
  Entries.saveEntry()
}






















Entries.preset = function(hem){
Entries.entryattributedescriptions = []
Entries.entryattributetitles = []
    SunMohka.EntryEditMohka.attributesmohka.ray("")
if(hem == "none"){    
    }

if(hem == "Story"){
Entries.addspecificattribute("Who")
Entries.addspecificattribute("When")
Entries.addspecificattribute("Tags")
    }

if(hem == "Event"){
Entries.addspecificattribute("Who")
Entries.addspecificattribute("When")
Entries.addspecificattribute("Tags")
    }




//Puppy

if(hem == "Puppynote"){
Entries.addspecificattribute("Who")
Entries.addspecificattribute("Tags")
    }

if(hem == "Puppy"){
Entries.addspecificattribute("Parents")
Entries.addspecificattribute("Siblings")
Entries.addspecificattribute("Children")
    }



if(hem == "Puppypicture"){
Entries.addspecificattribute("Tags")
Entries.addspecificattribute("Who")
    }

if(hem == "Food"){
Entries.addspecificattribute("Tags")
Entries.addspecificattribute("Who")
    }



//Starlit



//Felis and Starlit

    if(hem == "Card"){
Entries.addspecificattribute("CardType")
Entries.addspecificattribute("Role")
Entries.addspecificattribute("Type")
Entries.addspecificattribute("Stats")
if(Entries.vclass.eren>0){
Entries.addspecificattribute("Class1")
Entries.addspecificattribute("Class2")
}
Entries.addspecificattribute("Extroversion")
Entries.addspecificattribute("Quotes")
Entries.addspecificattribute("Rarity")
    }

if(hem == "Booster"){
Entries.addspecificattribute("Cards")
Entries.addspecificattribute("ReleaseDate")
Entries.addspecificattribute("ShowotronTitle")
Entries.addspecificattribute("ShowotronDescription")
Entries.addspecificattribute("Price")
Entries.addspecificattribute("DaysBeforeReleaseAddToGalleryAndShowotron")
Entries.addspecificattribute("Amount")
Entries.addspecificattribute("Mutations")
Entries.addspecificattribute("Type")
    }



//Felis

    if(hem == "Boss"){
Entries.addspecificattribute("HP")
Entries.addspecificattribute("Rarity")
    }


//RosinVault

    if(hem == "Dab"){
Entries.addspecificattribute("Strains")
Entries.addspecificattribute("ReleaseDate")
Entries.addspecificattribute("ShowotronTitle")
Entries.addspecificattribute("ShowotronDescription")
Entries.addspecificattribute("Price")
Entries.addspecificattribute("Available")
Entries.addspecificattribute("Inventory")
Entries.addspecificattribute("DaysBeforeReleaseAddToGalleryAndShowotron")
Entries.addspecificattribute("Temperature")
Entries.addspecificattribute("Type")
    }

if(hem == "Plant"){
Entries.addspecificattribute("Strains")
Entries.addspecificattribute("ReleaseDate")
Entries.addspecificattribute("ShowotronTitle")
Entries.addspecificattribute("ShowotronDescription")
Entries.addspecificattribute("Price")
Entries.addspecificattribute("DaysBeforeReleaseAddToGalleryAndShowotron")
Entries.addspecificattribute("Amount")
Entries.addspecificattribute("Temperature")
Entries.addspecificattribute("Type")
    }

if(hem == "GambleQuestion"){
Entries.addspecificattribute("Matchup")
Entries.addspecificattribute("Question")
    }


//misc

if(hem == "Coin"){
Entries.addspecificattribute("IdealTemperature")
Entries.addspecificattribute("Strains")
    }
if(hem == "HomeImg"){
Entries.addspecificattribute("Date")
    }

if(hem == "Event"){
      Entries.addspecificattribute("Weight")
      Entries.addspecificattribute("Effect")
    }



  }

Entries.addspecificattribute = function(hem,hemaera){
    let attributesholder = Crystalline.maaelle('div',0,(1/10)*Entries.entryattributetitles.length,1,1/10,SunMohka.EntryEditMohka.attributesmohka)
    let attributestitle = Crystalline.maaelle('div',0,0,1/2,1,attributesholder).hint("title").ray(hem)
    Entries.entryattributetitles.push(attributestitle)    
let attributesvalue = ""

if(hem == "Class1" || hem == "Class2"){
attributesvalue = Crystalline.maaelle('select',1/2,0,1/2,1,attributesholder)
attributesvalue.vattribute = []

for(let c=0;c<Entries.vclass.eren;c++){
let hemb = Crystalline.maaelle('option',attributesvalue).ray(Entries.vclass[c])

attributesvalue.vattribute.erenlupe(hemb)
}

}

if(hem == "ReleaseDate" || hem == "When"){
attributesvalue = Crystalline.maaelle('input',1/2,0,1/2,1,attributesholder)
attributesvalue.type = "datetime-local"
}

if(hem != "When" && hem != "ReleaseDate" && hem != "Class1" && hem != "Class2"){attributesvalue = Crystalline.maaelle('aera',1/2,0,1/2,1,attributesholder).hint("value")    
}
   if(hem == "Date"){
let d = new Date()
let dd = d.toUTCString()
attributesvalue.ray(dd)
}
if(hemaera != undefined){attributesvalue.value = hemaera}
    Entries.entryattributedescriptions.push(attributesvalue)
  }

Entries.loadattributes = function(attributesstring){
Entries.entryattributedescriptions = []
Entries.entryattributetitles = []
SunMohka.EntryEditMohka.attributesmohka.ray("")
    let entryattributes = attributesstring.split("~x*^*x~")
    for(let we = 0; we < entryattributes.length; we++){
      let attributedata = entryattributes[we].split("~!*^*!~")
      let attributename = attributedata[0]
      let attributeamount = attributedata[1]
      let attributesholder = Crystalline.maaelle('div',0,(1/10)*Entries.entryattributetitles.length,1,1/10,SunMohka.EntryEditMohka.attributesmohka)
Entries.addspecificattribute(attributename,attributeamount)

    }
  }































let timeshow = Creatures.maaEditTimeShower()
SunMohka.BottomBar.Add(timeshow)
let viewshow = Creatures.maaViewShower()
SunMohka.BottomBar.Add(viewshow)



Users.createSignInBar("S")


let homeli = Crystalline.maaelle('div',0,0,1,1).ray("Home").vcenter().eshe(function(){
Crystalline.veskaLo(sunlo,"home")
}.bind(this))
SunMohka.TopBar.Add(homeli)

let galleryli = Crystalline.maaelle('div',0,0,1,1).ray("Vault").vcenter().eshe(function(){
Crystalline.veskaLo(sunlo,"vault")
}.bind(this))
SunMohka.TopBar.Add(galleryli)

let gambleli = Crystalline.maaelle('div',0,0,1,1).ray("Gamble").vcenter().eshe(function(){
Crystalline.veskaLo(sunlo,"gamble")
}.bind(this))
SunMohka.TopBar.Add(gambleli)
SunMohka.TopBar.Add(Creatures.Gamble.TopBarLi)
Creatures.Gamble.TopBarLi.hem()

let referalli = Crystalline.maaelle('div',0,0,1,1).ray("Referal").vcenter().eshe(function(){
Crystalline.veskaLo(sunlo,"refer")
}.bind(this))
SunMohka.TopBar.Add(referalli)


Creatures.refer.maaTree(0,0,1,1,SunMohka.Aera)

/*
let tthen = function(){
let ion = Crystalline.Corsan.maaInvisithing(550,0,550)
Crystalline.Corsan.maaTree(627,0,486)
Crystalline.Corsan.maaTree(513,0,457)
Crystalline.Corsan.maaTree(450,0,557)
Crystalline.Corsan.maaTree(526,0,647)
Crystalline.Corsan.maaTree(635,0,603)
Crystalline.Corsan.maaLight(635,91,603,2)
Crystalline.Corsan.CameraPosition(430,0,680)
Crystalline.Corsan.cameraSpin()
Crystalline.Corsan.CameraAutoTurnaround(ion)




}.bind(this)
let ttani = function(){
}.bind(this)
Crystalline.hemThree(tthen,ttani,0,0,1,1,SunMohka.Aera,1,1)


*/


Entries.hem(function(){


})</script></body>
</html>